{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/.pnpm/js-event-bus@1.1.1/node_modules/js-event-bus/src/index.js", "../src/index.ts", "../src/animations/index.ts", "../src/app.ts", "../node_modules/.pnpm/lenis@1.3.11/node_modules/lenis/package.json", "../node_modules/.pnpm/lenis@1.3.11/node_modules/lenis/packages/core/src/maths.ts", "../node_modules/.pnpm/lenis@1.3.11/node_modules/lenis/packages/core/src/animate.ts", "../node_modules/.pnpm/lenis@1.3.11/node_modules/lenis/packages/core/src/debounce.ts", "../node_modules/.pnpm/lenis@1.3.11/node_modules/lenis/packages/core/src/dimensions.ts", "../node_modules/.pnpm/lenis@1.3.11/node_modules/lenis/packages/core/src/emitter.ts", "../node_modules/.pnpm/lenis@1.3.11/node_modules/lenis/packages/core/src/virtual-scroll.ts", "../node_modules/.pnpm/lenis@1.3.11/node_modules/lenis/packages/core/src/lenis.ts", "../src/utils/getEnvironment.ts", "../src/utils/getParams.ts", "../src/types/index.ts", "../src/types/animations.ts", "../src/types/config.ts", "../src/types/dom.ts", "../src/types/events.ts", "../src/animations/config.ts", "../src/animations/manager.ts", "../src/animations/factory.ts", "../src/animations/registry.ts", "../src/animations/timelines/aiTeam.ts", "../src/config/constants.ts", "../src/utils/queryElement.ts", "../src/utils/queryElements.ts", "../src/animations/timelines/blogCard.ts", "../src/animations/timelines/cardFade.ts", "../src/animations/timelines/cardFlip.ts", "../src/types/thresholds.ts", "../src/utils/containerThreshold.ts", "../src/utils/debug.ts", "../src/animations/timelines/contentHeader.ts", "../src/animations/timelines/footer.ts", "../src/animations/timelines/hero.ts", "../src/animations/utils/moveY.ts", "../src/animations/timelines/homeHero.ts", "../src/animations/timelines/industries.ts", "../src/animations/timelines/logos.ts", "../src/animations/timelines/modern.ts", "../src/animations/timelines/panels.ts", "../src/animations/timelines/reveal.ts", "../src/components/index.ts", "../src/components/aiTeamSlider.ts", "../src/components/benefits.ts", "../src/components/nav.ts", "../src/components/team.ts", "../src/utils/scrollControl.ts", "../src/components/testimonials.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "(function(caller, bus) {\n  if (typeof exports === 'object' && typeof module === 'object') {\n    module.exports = bus();\n    module.exports.default = module.exports;\n  } else if (typeof exports === 'object') {\n    exports.EventBus = bus();\n  } else {\n    caller.EventBus = bus();\n  }\n})(this, function() {\n  var EventBus = function() {\n    this.listeners = {};\n\n    this.registerListener = function(event, callback, number) {\n      var type = event.constructor.name;\n      number = this.validateNumber(number || 'any');\n\n      if (type !== 'Array') {\n        event = [event];\n      }\n\n      event.forEach(function(e) {\n        if (e.constructor.name !== 'String') {\n          throw new Error(\n            'Only `String` and array of `String` are accepted for the event names!'\n          );\n        }\n\n        that.listeners[e] = that.listeners[e] || [];\n        that.listeners[e].push({\n          callback: callback,\n          number: number,\n        });\n      });\n    };\n\n    // valiodate that the number is a vild number for the number of executions\n    this.validateNumber = function(n) {\n      var type = n.constructor.name;\n\n      if (type === 'Number') {\n        return n;\n      } else if (type === 'String' && n.toLowerCase() === 'any') {\n        return 'any';\n      }\n\n      throw new Error(\n        'Only `Number` and `any` are accepted in the number of possible executions!'\n      );\n    };\n\n    // return wether or not this event needs to be removed\n    this.toBeRemoved = function(info) {\n      var number = info.number;\n      info.execution = info.execution || 0;\n      info.execution++;\n\n      if (number === 'any' || info.execution < number) {\n        return false;\n      }\n\n      return true;\n    };\n\n    var that = this;\n    return {\n      /**\n       * Attach a callback to an event\n       * @param {string} eventName - name of the event.\n       * @param {function} callback - callback executed when this event is triggered\n       */\n      on: function(eventName, callback) {\n        that.registerListener.bind(that)(eventName, callback, 'any');\n      },\n\n      /**\n       * Attach a callback to an event. This callback will not be executed more than once if the event is trigger mutiple times\n       * @param {string} eventName - name of the event.\n       * @param {function} callback - callback executed when this event is triggered\n       */\n      once: function(eventName, callback) {\n        that.registerListener.bind(that)(eventName, callback, 1);\n      },\n\n      /**\n       * Attach a callback to an event. This callback will be executed will not be executed more than the number if the event is trigger mutiple times\n       * @param {number} number - max number of executions\n       * @param {string} eventName - name of the event.\n       * @param {function} callback - callback executed when this event is triggered\n       */\n      exactly: function(number, eventName, callback) {\n        that.registerListener.bind(that)(eventName, callback, number);\n      },\n\n      /**\n       * Kill an event with all it's callbacks\n       * @param {string} eventName - name of the event.\n       */\n      die: function(eventName) {\n        delete that.listeners[eventName];\n      },\n\n      /**\n       * Kill an event with all it's callbacks\n       * @param {string} eventName - name of the event.\n       */\n      off: function(eventName) {\n        this.die(eventName);\n      },\n\n      /**\n       * Remove the callback for the given event\n       * @param {string} eventName - name of the event.\n       * @param {callback} callback - the callback to remove (undefined to remove all of them).\n       */\n      detach: function(eventName, callback) {\n        if (callback === undefined) {\n          that.listeners[eventName] = [];\n          return true;\n        }\n\n        for (var k in that.listeners[eventName]) {\n          if (\n            that.listeners[eventName].hasOwnProperty(k) &&\n            that.listeners[eventName][k].callback === callback\n          ) {\n            that.listeners[eventName].splice(k, 1);\n            return this.detach(eventName, callback);\n          }\n        }\n\n        return true;\n      },\n\n      /**\n       * Remove all the events\n       */\n      detachAll: function() {\n        for (var eventName in that.listeners) {\n          if (that.listeners.hasOwnProperty(eventName)) {\n            this.detach(eventName);\n          }\n        }\n      },\n\n      /**\n       * Emit the event\n       * @param {string} eventName - name of the event.\n       */\n      emit: function(eventName, context) {\n        var listeners = [];\n        for (var name in that.listeners) {\n          if (that.listeners.hasOwnProperty(name)) {\n            if (name === eventName) {\n              //TODO: this lib should definitely use > ES5\n              Array.prototype.push.apply(listeners, that.listeners[name]);\n            }\n\n            if (name.indexOf('*') >= 0) {\n              var newName = name.replace(/\\*\\*/, '([^.]+.?)+');\n              newName = newName.replace(/\\*/g, '[^.]+');\n\n              var match = eventName.match(newName);\n              if (match && eventName === match[0]) {\n                Array.prototype.push.apply(listeners, that.listeners[name]);\n              }\n            }\n          }\n        }\n\n        var parentArgs = arguments;\n\n        context = context || this;\n        listeners.forEach(function(info, index) {\n          var callback = info.callback;\n          var number = info.number;\n\n          if (context) {\n            callback = callback.bind(context);\n          }\n\n          var args = [];\n          Object.keys(parentArgs).map(function(i) {\n            if (i > 1) {\n              args.push(parentArgs[i]);\n            }\n          });\n\n          // this event cannot be fired again, remove from the stack\n          if (that.toBeRemoved(info)) {\n            that.listeners[eventName].splice(index, 1);\n          }\n\n          callback.apply(null, args);\n        });\n      },\n    };\n  };\n\n  return EventBus;\n});\n", "import { initAnimations } from './animations';\nimport { App } from './app';\nimport { components } from './components';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  // Initialize animation system (sets up listeners for APP_INITIALIZED)\n  initAnimations();\n\n  // Initialize components\n  components();\n\n  // Initialize the app singleton\n  const app = App.getInstance();\n\n  // Initialize app (this will trigger APP_INITIALIZED when ready)\n  app.init();\n});\n", "import { App } from '$app';\nimport { Events } from '$events';\n\nimport { initGSAPDefaults } from './config';\nimport { AnimationManager } from './manager';\n\n/**\n * Initialize the animation system\n * This should be called after APP_INITIALIZED\n */\nexport const initAnimations = (): void => {\n  const app = App.getInstance();\n\n  // Initialize GSAP defaults\n  initGSAPDefaults();\n  const manager = AnimationManager.getInstance();\n  manager.initialize();\n\n  // Set up animation manager after app initialization\n  app.eventBus.on(Events.APP_INITIALIZED, () => {\n    manager.appReady();\n  });\n};\n\n// Export for direct access if needed\nexport * from './config';\nexport { AnimationManager } from './manager';\nexport { timelineRegistry } from './registry';\n", "import EventBus from 'js-event-bus';\nimport Lenis from 'lenis';\n\nimport { getEnvironment } from '$utils/getEnvironment';\nimport { getParams } from '$utils/getParams';\n\nimport { type Environment, Events } from './types';\n\nexport class App {\n  private static _instance: App;\n  public eventBus: EventBus;\n  public initialised: boolean = false;\n  public environment: Environment;\n  public params: Record<string, string>;\n  public lenis: Lenis;\n\n  private constructor() {\n    this.eventBus = new EventBus();\n    this.environment = getEnvironment();\n    this.params = getParams();\n    this.lenis = new Lenis();\n  }\n\n  public static getInstance(): App {\n    if (!App._instance) App._instance = new App();\n    return App._instance;\n  }\n\n  public init(): void {\n    if (this.initialised) {\n      return;\n    }\n\n    this.smoothScroll();\n\n    this.initialised = true;\n    this.eventBus.emit(Events.APP_INITIALIZED);\n  }\n\n  private smoothScroll(): void {\n    // Synchronize Lenis scrolling with GSAP's ScrollTrigger plugin\n    this.lenis.on('scroll', ScrollTrigger.update);\n\n    // Add Lenis's requestAnimationFrame (raf) method to GSAP's ticker\n    // This ensures Lenis's smooth scroll animation updates on each GSAP tick\n    gsap.ticker.add((time) => {\n      this.lenis.raf(time * 1000); // Convert time from seconds to milliseconds\n    });\n\n    // Disable lag smoothing in GSAP to prevent any delay in scroll animations\n    gsap.ticker.lagSmoothing(0);\n  }\n}\n", "{\n  \"name\": \"lenis\",\n  \"version\": \"1.3.11\",\n  \"description\": \"How smooth scroll should be\",\n  \"type\": \"module\",\n  \"sideEffects\": false,\n  \"author\": \"darkroom.engineering\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/darkroomengineering/lenis.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/darkroomengineering/lenis/issues\"\n  },\n  \"homepage\": \"https://github.com/darkroomengineering/lenis\",\n  \"funding\": {\n    \"type\": \"github\",\n    \"url\": \"https://github.com/sponsors/darkroomengineering\"\n  },\n  \"keywords\": [\n    \"scroll\",\n    \"smooth\",\n    \"lenis\",\n    \"react\",\n    \"vue\"\n  ],\n  \"scripts\": {\n    \"build\": \"pnpm build:core && pnpm build:all\",\n    \"build:core\": \"tsup --config tsup.core.ts\",\n    \"build:all\": \"tsup\",\n    \"dev\": \"pnpm run -w --parallel /^dev:.*/\",\n    \"dev:build\": \"tsup --watch\",\n    \"dev:playground\": \"pnpm --filter playground dev\",\n    \"dev:nuxt\": \"pnpm --filter playground-nuxt dev\",\n    \"readme\": \"node ./scripts/update-readme.js\",\n    \"version:dev\": \"npm version prerelease --preid dev --force --no-git-tag-version\",\n    \"version:patch\": \"npm version patch --force --no-git-tag-version\",\n    \"version:minor\": \"npm version minor --force --no-git-tag-version\",\n    \"version:major\": \"npm version major --force --no-git-tag-version\",\n    \"postversion\": \"pnpm build && pnpm readme\",\n    \"publish:dev\": \"npm publish --tag dev\",\n    \"publish:main\": \"npm publish\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"devDependencies\": {\n    \"terser\": \"^5.37.0\",\n    \"tsup\": \"^8.3.5\",\n    \"typescript\": \"^5.7.3\"\n  },\n  \"peerDependencies\": {\n    \"react\": \">=17.0.0\",\n    \"vue\": \">=3.0.0\",\n    \"@nuxt/kit\": \">=3.0.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"react\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    },\n    \"@nuxt/kit\": {\n      \"optional\": true\n    }\n  },\n  \"unpkg\": \"./dist/lenis.mjs\",\n  \"main\": \"./dist/lenis.mjs\",\n  \"module\": \"./dist/lenis.mjs\",\n  \"types\": \"./dist/lenis.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/lenis.d.ts\",\n      \"default\": \"./dist/lenis.mjs\"\n    },\n    \"./react\": {\n      \"types\": \"./dist/lenis-react.d.ts\",\n      \"default\": \"./dist/lenis-react.mjs\"\n    },\n    \"./snap\": {\n      \"types\": \"./dist/lenis-snap.d.ts\",\n      \"default\": \"./dist/lenis-snap.mjs\"\n    },\n    \"./vue\": {\n      \"types\": \"./dist/lenis-vue.d.ts\",\n      \"default\": \"./dist/lenis-vue.mjs\"\n    },\n    \"./nuxt\": {\n      \"default\": \"./dist/lenis-vue-nuxt.mjs\"\n    },\n    \"./nuxt/runtime/*\": {\n      \"default\": \"./dist/nuxt/runtime/*.mjs\"\n    },\n    \"./dist/*\": \"./dist/*\"\n  }\n}\n", "/**\r\n * Clamp a value between a minimum and maximum value\r\n *\r\n * @param min Minimum value\r\n * @param input Value to clamp\r\n * @param max Maximum value\r\n * @returns Clamped value\r\n */\r\nexport function clamp(min: number, input: number, max: number) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n/**\r\n * Truncate a floating-point number to a specified number of decimal places\r\n *\r\n * @param value Value to truncate\r\n * @param decimals Number of decimal places to truncate to\r\n * @returns Truncated value\r\n */\r\nexport function truncate(value: number, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n/**\r\n *  Linearly interpolate between two values using an amount (0 <= t <= 1)\r\n *\r\n * @param x First value\r\n * @param y Second value\r\n * @param t Amount to interpolate (0 <= t <= 1)\r\n * @returns Interpolated value\r\n */\r\nexport function lerp(x: number, y: number, t: number) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n/**\r\n * Damp a value over time using a damping factor\r\n * {@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}\r\n *\r\n * @param x Initial value\r\n * @param y Target value\r\n * @param lambda Damping factor\r\n * @param dt Time elapsed since the last update\r\n * @returns Damped value\r\n */\r\nexport function damp(x: number, y: number, lambda: number, deltaTime: number) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * deltaTime))\r\n}\r\n\r\n/**\r\n * Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n * {@link https://anguscroll.com/just/just-modulo}\r\n *\r\n * @param n Dividend\r\n * @param d Divisor\r\n * @returns Modulo\r\n */\r\nexport function modulo(n: number, d: number) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\nimport type { EasingFunction, FromToOptions, OnUpdateCallback } from './types'\r\n\r\n/**\r\n * Animate class to handle value animations with lerping or easing\r\n *\r\n * @example\r\n * const animate = new Animate()\r\n * animate.fromTo(0, 100, { duration: 1, easing: (t) => t })\r\n * animate.advance(0.5) // 50\r\n */\r\nexport class Animate {\r\n  isRunning = false\r\n  value = 0\r\n  from = 0\r\n  to = 0\r\n  currentTime = 0\r\n\r\n  // These are instanciated in the fromTo method\r\n  lerp?: number\r\n  duration?: number\r\n  easing?: EasingFunction\r\n  onUpdate?: OnUpdateCallback\r\n\r\n  /**\r\n   * Advance the animation by the given delta time\r\n   *\r\n   * @param deltaTime - The time in seconds to advance the animation\r\n   */\r\n  advance(deltaTime: number) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.duration && this.easing) {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    } else if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      // If no easing or lerp, just jump to the end value\r\n      this.value = this.to\r\n      completed = true\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  /** Stop the animation */\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  /**\r\n   * Set up the animation from a starting value to an ending value\r\n   * with optional parameters for lerping, duration, easing, and onUpdate callback\r\n   *\r\n   * @param from - The starting value\r\n   * @param to - The ending value\r\n   * @param options - Options for the animation\r\n   */\r\n  fromTo(\r\n    from: number,\r\n    to: number,\r\n    { lerp, duration, easing, onStart, onUpdate }: FromToOptions\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "export function debounce<CB extends (...args: any[]) => void>(\r\n  callback: CB,\r\n  delay: number\r\n) {\r\n  let timer: number | undefined\r\n  return function <T>(this: T, ...args: Parameters<typeof callback>) {\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n      timer = undefined\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\n/**\r\n * Dimensions class to handle the size of the content and wrapper\r\n *\r\n * @example\r\n * const dimensions = new Dimensions(wrapper, content)\r\n * dimensions.on('resize', (e) => {\r\n *   console.log(e.width, e.height)\r\n * })\r\n */\r\nexport class Dimensions {\r\n  width = 0\r\n  height = 0\r\n  scrollHeight = 0\r\n  scrollWidth = 0\r\n\r\n  // These are instanciated in the constructor as they need information from the options\r\n  private debouncedResize?: (...args: unknown[]) => void\r\n  private wrapperResizeObserver?: ResizeObserver\r\n  private contentResizeObserver?: ResizeObserver\r\n\r\n  constructor(\r\n    private wrapper: HTMLElement | Window | Element,\r\n    private content: HTMLElement | Element,\r\n    { autoResize = true, debounce: debounceValue = 250 } = {}\r\n  ) {\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper instanceof Window) {\r\n        window.addEventListener('resize', this.debouncedResize, false)\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n\r\n    if (this.wrapper === window && this.debouncedResize) {\r\n      window.removeEventListener('resize', this.debouncedResize, false)\r\n    }\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper instanceof Window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper instanceof Window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "/**\r\n * Emitter class to handle events\r\n * @example\r\n * const emitter = new Emitter()\r\n * emitter.on('event', (data) => {\r\n *   console.log(data)\r\n * })\r\n * emitter.emit('event', 'data')\r\n */\r\nexport class Emitter {\r\n  private events: Record<\r\n    string,\r\n    Array<(...args: unknown[]) => void> | undefined\r\n  > = {}\r\n\r\n  /**\r\n   * Emit an event with the given data\r\n   * @param event Event name\r\n   * @param args Data to pass to the event handlers\r\n   */\r\n  emit(event: string, ...args: unknown[]) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i]?.(...args)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a callback to the event\r\n   * @param event Event name\r\n   * @param cb Callback function\r\n   * @returns Unsubscribe function\r\n   */\r\n  on<CB extends (...args: any[]) => void>(event: string, cb: CB) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a callback from the event\r\n   * @param event Event name\r\n   * @param callback Callback function\r\n   */\r\n  off<CB extends (...args: any[]) => void>(event: string, callback: CB) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  /**\r\n   * Remove all event listeners and clean up\r\n   */\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n", "import { Emitter } from './emitter'\r\nimport type { VirtualScrollCallback } from './types'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\nconst listenerOptions: AddEventListenerOptions = { passive: false }\r\n\r\nexport class VirtualScroll {\r\n  touchStart = {\r\n    x: 0,\r\n    y: 0,\r\n  }\r\n  lastDelta = {\r\n    x: 0,\r\n    y: 0,\r\n  }\r\n  window = {\r\n    width: 0,\r\n    height: 0,\r\n  }\r\n  private emitter = new Emitter()\r\n\r\n  constructor(\r\n    private element: HTMLElement,\r\n    private options = { wheelMultiplier: 1, touchMultiplier: 1 }\r\n  ) {\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, listenerOptions)\r\n    this.element.addEventListener(\r\n      'touchstart',\r\n      this.onTouchStart,\r\n      listenerOptions\r\n    )\r\n    this.element.addEventListener(\r\n      'touchmove',\r\n      this.onTouchMove,\r\n      listenerOptions\r\n    )\r\n    this.element.addEventListener('touchend', this.onTouchEnd, listenerOptions)\r\n  }\r\n\r\n  /**\r\n   * Add an event listener for the given event and callback\r\n   *\r\n   * @param event Event name\r\n   * @param callback Callback function\r\n   */\r\n  on(event: string, callback: VirtualScrollCallback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  /** Remove all event listeners and clean up */\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, listenerOptions)\r\n    this.element.removeEventListener(\r\n      'touchstart',\r\n      this.onTouchStart,\r\n      listenerOptions\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchmove',\r\n      this.onTouchMove,\r\n      listenerOptions\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchend',\r\n      this.onTouchEnd,\r\n      listenerOptions\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Event handler for 'touchstart' event\r\n   *\r\n   * @param event Touch event\r\n   */\r\n  onTouchStart = (event: TouchEvent) => {\r\n    // @ts-expect-error - event.targetTouches is not defined\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  /** Event handler for 'touchmove' event */\r\n  onTouchMove = (event: TouchEvent) => {\r\n    // @ts-expect-error - event.targetTouches is not defined\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.options.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.options.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event: TouchEvent) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  /** Event handler for 'wheel' event */\r\n  onWheel = (event: WheelEvent) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.width : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.height : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.options.wheelMultiplier\r\n    deltaY *= this.options.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.window = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    }\r\n  }\r\n}\r\n", "import { version } from '../../../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { Emitter } from './emitter'\nimport { clamp, modulo } from './maths'\nimport type {\n  LenisEvent,\n  LenisOptions,\n  ScrollCallback,\n  Scrolling,\n  ScrollToOptions,\n  UserData,\n  VirtualScrollCallback,\n  VirtualScrollData,\n} from './types'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explanation\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\ntype OptionalPick<T, F extends keyof T> = Omit<T, F> & Partial<Pick<T, F>>\n\nconst defaultEasing = (t: number) => Math.min(1, 1.001 - Math.pow(2, -10 * t))\n\nexport class Lenis {\n  private _isScrolling: Scrolling = false // true when scroll is animating\n  private _isStopped = false // true if user should not be able to scroll - enable/disable programmatically\n  private _isLocked = false // same as isStopped but enabled/disabled when scroll reaches target\n  private _preventNextNativeScrollEvent = false\n  private _resetVelocityTimeout: ReturnType<typeof setTimeout> | null = null\n  private __rafID: number | null = null\n\n  /**\n   * Whether or not the user is touching the screen\n   */\n  isTouching?: boolean\n  /**\n   * The time in ms since the lenis instance was created\n   */\n  time = 0\n  /**\n   * User data that will be forwarded through the scroll event\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   userData: {\n   *     foo: 'bar'\n   *   }\n   * })\n   */\n  userData: UserData = {}\n  /**\n   * The last velocity of the scroll\n   */\n  lastVelocity = 0\n  /**\n   * The current velocity of the scroll\n   */\n  velocity = 0\n  /**\n   * The direction of the scroll\n   */\n  direction: 1 | -1 | 0 = 0\n  /**\n   * The options passed to the lenis instance\n   */\n  options: OptionalPick<\n    Required<LenisOptions>,\n    'duration' | 'easing' | 'prevent' | 'virtualScroll'\n  >\n  /**\n   * The target scroll value\n   */\n  targetScroll: number\n  /**\n   * The animated scroll value\n   */\n  animatedScroll: number\n\n  // These are instanciated here as they don't need information from the options\n  private readonly animate = new Animate()\n  private readonly emitter = new Emitter()\n  // These are instanciated in the constructor as they need information from the options\n  readonly dimensions: Dimensions // This is not private because it's used in the Snap class\n  private readonly virtualScroll: VirtualScroll\n\n  constructor({\n    wrapper = window,\n    content = document.documentElement,\n    eventsTarget = wrapper,\n    smoothWheel = true,\n    syncTouch = false,\n    syncTouchLerp = 0.075,\n    touchInertiaExponent = 1.7,\n    duration, // in seconds\n    easing,\n    lerp = 0.1,\n    infinite = false,\n    orientation = 'vertical', // vertical, horizontal\n    gestureOrientation = orientation === 'horizontal' ? 'both' : 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = 1,\n    autoResize = true,\n    prevent,\n    virtualScroll,\n    overscroll = true,\n    autoRaf = false,\n    anchors = false,\n    autoToggle = false, // https://caniuse.com/?search=transition-behavior\n    allowNestedScroll = false,\n    __experimental__naiveDimensions = false,\n  }: LenisOptions = {}) {\n    // Set version\n    window.lenisVersion = version\n\n    // Check if wrapper is <html>, fallback to window\n    if (!wrapper || wrapper === document.documentElement) {\n      wrapper = window\n    }\n\n    // flip to easing/time based animation if at least one of them is provided\n    if (typeof duration === 'number' && typeof easing !== 'function') {\n      easing = defaultEasing\n    } else if (typeof easing === 'function' && typeof duration !== 'number') {\n      duration = 1\n    }\n\n    // Setup options\n    this.options = {\n      wrapper,\n      content,\n      eventsTarget,\n      smoothWheel,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaExponent,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      autoResize,\n      prevent,\n      virtualScroll,\n      overscroll,\n      autoRaf,\n      anchors,\n      autoToggle,\n      allowNestedScroll,\n      __experimental__naiveDimensions,\n    }\n\n    // Setup dimensions instance\n    this.dimensions = new Dimensions(wrapper, content, { autoResize })\n\n    // Setup class name\n    this.updateClassName()\n\n    // Set the initial scroll value for all scroll information\n    this.targetScroll = this.animatedScroll = this.actualScroll\n\n    // Add event listeners\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\n\n    this.options.wrapper.addEventListener('scrollend', this.onScrollEnd, {\n      capture: true,\n    })\n\n    if (this.options.anchors && this.options.wrapper === window) {\n      this.options.wrapper.addEventListener(\n        'click',\n        this.onClick as EventListener,\n        false\n      )\n    }\n\n    this.options.wrapper.addEventListener(\n      'pointerdown',\n      this.onPointerDown as EventListener,\n      false\n    )\n\n    // Setup virtual scroll instance\n    this.virtualScroll = new VirtualScroll(eventsTarget as HTMLElement, {\n      touchMultiplier,\n      wheelMultiplier,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n\n    if (this.options.autoToggle) {\n      this.rootElement.addEventListener('transitionend', this.onTransitionEnd, {\n        passive: true,\n      })\n    }\n\n    if (this.options.autoRaf) {\n      this.__rafID = requestAnimationFrame(this.raf)\n    }\n  }\n\n  /**\n   * Destroy the lenis instance, remove all event listeners and clean up the class name\n   */\n  destroy() {\n    this.emitter.destroy()\n\n    this.options.wrapper.removeEventListener(\n      'scroll',\n      this.onNativeScroll,\n      false\n    )\n\n    this.options.wrapper.removeEventListener('scrollend', this.onScrollEnd, {\n      capture: true,\n    })\n\n    this.options.wrapper.removeEventListener(\n      'pointerdown',\n      this.onPointerDown as EventListener,\n      false\n    )\n\n    if (this.options.anchors && this.options.wrapper === window) {\n      this.options.wrapper.removeEventListener(\n        'click',\n        this.onClick as EventListener,\n        false\n      )\n    }\n\n    this.virtualScroll.destroy()\n    this.dimensions.destroy()\n\n    this.cleanUpClassName()\n\n    if (this.__rafID) {\n      cancelAnimationFrame(this.__rafID)\n    }\n  }\n\n  /**\n   * Add an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   * @returns Unsubscribe function\n   */\n  on(event: 'scroll', callback: ScrollCallback): () => void\n  on(event: 'virtual-scroll', callback: VirtualScrollCallback): () => void\n  on(event: LenisEvent, callback: any) {\n    return this.emitter.on(event, callback)\n  }\n\n  /**\n   * Remove an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   */\n  off(event: 'scroll', callback: ScrollCallback): void\n  off(event: 'virtual-scroll', callback: VirtualScrollCallback): void\n  off(event: LenisEvent, callback: any) {\n    return this.emitter.off(event, callback)\n  }\n\n  private onScrollEnd = (e: Event | CustomEvent) => {\n    if (!(e instanceof CustomEvent)) {\n      if (this.isScrolling === 'smooth' || this.isScrolling === false) {\n        e.stopPropagation()\n      }\n    }\n  }\n\n  private dispatchScrollendEvent = () => {\n    this.options.wrapper.dispatchEvent(\n      new CustomEvent('scrollend', {\n        bubbles: this.options.wrapper === window,\n        // cancelable: false,\n        detail: {\n          lenisScrollEnd: true,\n        },\n      })\n    )\n  }\n\n  private onTransitionEnd = (event: TransitionEvent) => {\n    if (event.propertyName.includes('overflow')) {\n      const property = this.isHorizontal ? 'overflow-x' : 'overflow-y'\n\n      const overflow = getComputedStyle(this.rootElement)[\n        property as keyof CSSStyleDeclaration\n      ] as string\n\n      if (['hidden', 'clip'].includes(overflow)) {\n        this.internalStop()\n      } else {\n        this.internalStart()\n      }\n    }\n  }\n\n  private setScroll(scroll: number) {\n    // behavior: 'instant' bypasses the scroll-behavior CSS property\n\n    if (this.isHorizontal) {\n      this.options.wrapper.scrollTo({ left: scroll, behavior: 'instant' })\n    } else {\n      this.options.wrapper.scrollTo({ top: scroll, behavior: 'instant' })\n    }\n  }\n\n  private onClick = (event: PointerEvent | MouseEvent) => {\n    const path = event.composedPath()\n    const anchor = path.find(\n      (node) =>\n        node instanceof HTMLAnchorElement &&\n        (node.getAttribute('href')?.startsWith('#') ||\n          node.getAttribute('href')?.startsWith('/#') ||\n          node.getAttribute('href')?.startsWith('./#'))\n    ) as HTMLAnchorElement | undefined\n    if (anchor) {\n      const id = anchor.getAttribute('href')\n\n      if (id) {\n        const options =\n          typeof this.options.anchors === 'object' && this.options.anchors\n            ? this.options.anchors\n            : undefined\n\n        let target: number | string = `#${id.split('#')[1]}`\n        if (['#', '/#', './#', '#top', '/#top', './#top'].includes(id)) {\n          target = 0\n        }\n\n        this.scrollTo(target, options)\n      }\n    }\n  }\n\n  private onPointerDown = (event: PointerEvent | MouseEvent) => {\n    if (event.button === 1) {\n      this.reset()\n    }\n  }\n\n  private onVirtualScroll = (data: VirtualScrollData) => {\n    if (\n      typeof this.options.virtualScroll === 'function' &&\n      this.options.virtualScroll(data) === false\n    )\n      return\n\n    const { deltaX, deltaY, event } = data\n\n    this.emitter.emit('virtual-scroll', { deltaX, deltaY, event })\n\n    // keep zoom feature\n    if (event.ctrlKey) return\n    // @ts-ignore\n    if (event.lenisStopPropagation) return\n\n    const isTouch = event.type.includes('touch')\n    const isWheel = event.type.includes('wheel')\n\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\n    // if (event.type === 'touchend') {\n    //   console.log('touchend', this.scroll)\n    //   // this.lastVelocity = this.velocity\n    //   // this.velocity = 0\n    //   // this.isScrolling = false\n    //   this.emit({ type: 'touchend' })\n    //   // alert('touchend')\n    //   return\n    // }\n\n    const isClickOrTap = deltaX === 0 && deltaY === 0\n\n    const isTapToStop =\n      this.options.syncTouch &&\n      isTouch &&\n      event.type === 'touchstart' &&\n      isClickOrTap &&\n      !this.isStopped &&\n      !this.isLocked\n\n    if (isTapToStop) {\n      this.reset()\n      return\n    }\n\n    // const isPullToRefresh =\n    //   this.options.gestureOrientation === 'vertical' &&\n    //   this.scroll === 0 &&\n    //   !this.options.infinite &&\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\n\n    const isUnknownGesture =\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\n\n    if (isClickOrTap || isUnknownGesture) {\n      // console.log('prevent')\n      return\n    }\n\n    // catch if scrolling on nested scroll elements\n    let composedPath = event.composedPath()\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\n\n    const prevent = this.options.prevent\n\n    if (\n      !!composedPath.find(\n        (node) =>\n          node instanceof HTMLElement &&\n          ((typeof prevent === 'function' && prevent?.(node)) ||\n            node.hasAttribute?.('data-lenis-prevent') ||\n            (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\n            (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\n            (this.options.allowNestedScroll &&\n              this.checkNestedScroll(node, { deltaX, deltaY })))\n      )\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      if (event.cancelable) {\n        event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\n      }\n      return\n    }\n\n    const isSmooth =\n      (this.options.syncTouch && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!isSmooth) {\n      this.isScrolling = 'native'\n      this.animate.stop()\n      // @ts-ignore\n      event.lenisStopPropagation = true\n      return\n    }\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    if (\n      !this.options.overscroll ||\n      this.options.infinite ||\n      (this.options.wrapper !== window &&\n        this.limit > 0 &&\n        ((this.animatedScroll > 0 && this.animatedScroll < this.limit) ||\n          (this.animatedScroll === 0 && deltaY > 0) ||\n          (this.animatedScroll === this.limit && deltaY < 0)))\n    ) {\n      // @ts-ignore\n      event.lenisStopPropagation = true\n      // event.stopPropagation()\n    }\n\n    if (event.cancelable) {\n      event.preventDefault()\n    }\n\n    const isSyncTouch = isTouch && this.options.syncTouch\n    const isTouchEnd = isTouch && event.type === 'touchend'\n\n    const hasTouchInertia = isTouchEnd\n\n    if (hasTouchInertia) {\n      // delta = this.velocity * this.options.touchInertiaMultiplier\n      delta =\n        Math.sign(this.velocity) *\n        Math.pow(Math.abs(this.velocity), this.options.touchInertiaExponent)\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(isSyncTouch\n        ? {\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\n            // immediate: !hasTouchInertia,\n          }\n        : {\n            lerp: this.options.lerp,\n            duration: this.options.duration,\n            easing: this.options.easing,\n          }),\n    })\n  }\n\n  /**\n   * Force lenis to recalculate the dimensions\n   */\n  resize() {\n    this.dimensions.resize()\n    this.animatedScroll = this.targetScroll = this.actualScroll\n    this.emit()\n  }\n\n  private emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  private onNativeScroll = () => {\n    if (this._resetVelocityTimeout !== null) {\n      clearTimeout(this._resetVelocityTimeout)\n      this._resetVelocityTimeout = null\n    }\n\n    if (this._preventNextNativeScrollEvent) {\n      this._preventNextNativeScrollEvent = false\n      return\n    }\n\n    if (this.isScrolling === false || this.isScrolling === 'native') {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.lastVelocity = this.velocity\n      this.velocity = this.animatedScroll - lastScroll\n      this.direction = Math.sign(\n        this.animatedScroll - lastScroll\n      ) as Lenis['direction']\n\n      if (!this.isStopped) {\n        this.isScrolling = 'native'\n      }\n\n      this.emit()\n\n      if (this.velocity !== 0) {\n        this._resetVelocityTimeout = setTimeout(() => {\n          this.lastVelocity = this.velocity\n          this.velocity = 0\n          this.isScrolling = false\n          this.emit()\n        }, 400)\n      }\n    }\n  }\n\n  private reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.animatedScroll = this.targetScroll = this.actualScroll\n    this.lastVelocity = this.velocity = 0\n    this.animate.stop()\n  }\n\n  /**\n   * Start lenis scroll after it has been stopped\n   */\n  start() {\n    if (!this.isStopped) return\n\n    if (this.options.autoToggle) {\n      this.rootElement.style.removeProperty('overflow')\n      return\n    }\n\n    this.internalStart()\n  }\n\n  private internalStart() {\n    if (!this.isStopped) return\n\n    this.reset()\n    this.isStopped = false\n    this.emit()\n  }\n\n  /**\n   * Stop lenis scroll\n   */\n  stop() {\n    if (this.isStopped) return\n\n    if (this.options.autoToggle) {\n      this.rootElement.style.setProperty('overflow', 'clip')\n      return\n    }\n\n    this.internalStop()\n  }\n\n  private internalStop() {\n    if (this.isStopped) return\n\n    this.reset()\n    this.isStopped = true\n    this.emit()\n  }\n\n  /**\n   * RequestAnimationFrame for lenis\n   *\n   * @param time The time in ms from an external clock like `requestAnimationFrame` or Tempus\n   */\n  raf = (time: number) => {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n\n    if (this.options.autoRaf) {\n      this.__rafID = requestAnimationFrame(this.raf)\n    }\n  }\n\n  /**\n   * Scroll to a target value\n   *\n   * @param target The target value to scroll to\n   * @param options The options for the scroll\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   offset: 100,\n   *   duration: 1,\n   *   easing: (t) => 1 - Math.cos((t * Math.PI) / 2),\n   *   lerp: 0.1,\n   *   onStart: () => {\n   *     console.log('onStart')\n   *   },\n   *   onComplete: () => {\n   *     console.log('onComplete')\n   *   },\n   * })\n   */\n  scrollTo(\n    target: number | string | HTMLElement,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = this.options.lerp,\n      onStart,\n      onComplete,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n      userData,\n    }: ScrollToOptions = {}\n  ) {\n    if ((this.isStopped || this.isLocked) && !force) return\n\n    // keywords\n    if (\n      typeof target === 'string' &&\n      ['top', 'left', 'start'].includes(target)\n    ) {\n      target = 0\n    } else if (\n      typeof target === 'string' &&\n      ['bottom', 'right', 'end'].includes(target)\n    ) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target instanceof HTMLElement && target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.rootElement.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n\n        const distance = target - this.animatedScroll\n\n        if (distance > this.limit / 2) {\n          target = target - this.limit\n        } else if (distance < -this.limit / 2) {\n          target = target + this.limit\n        }\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (target === this.targetScroll) {\n      onStart?.(this)\n      onComplete?.(this)\n      return\n    }\n\n    this.userData = userData ?? {}\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      this.preventNextNativeScrollEvent()\n      this.emit()\n      onComplete?.(this)\n      this.userData = {}\n\n      requestAnimationFrame(() => {\n        this.dispatchScrollendEvent()\n      })\n      return\n    }\n\n    if (!programmatic) {\n      this.targetScroll = target\n    }\n\n    // flip to easing/time based animation if at least one of them is provided\n    if (typeof duration === 'number' && typeof easing !== 'function') {\n      easing = defaultEasing\n    } else if (typeof easing === 'function' && typeof duration !== 'number') {\n      duration = 1\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onStart: () => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = 'smooth'\n        onStart?.(this)\n      },\n      onUpdate: (value: number, completed: boolean) => {\n        this.isScrolling = 'smooth'\n\n        // updated\n        this.lastVelocity = this.velocity\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity) as Lenis['direction']\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        if (!completed) this.emit()\n\n        if (completed) {\n          this.reset()\n          this.emit()\n          onComplete?.(this)\n          this.userData = {}\n\n          requestAnimationFrame(() => {\n            this.dispatchScrollendEvent()\n          })\n\n          // avoid emitting event twice\n          this.preventNextNativeScrollEvent()\n        }\n      },\n    })\n  }\n\n  private preventNextNativeScrollEvent() {\n    this._preventNextNativeScrollEvent = true\n\n    requestAnimationFrame(() => {\n      this._preventNextNativeScrollEvent = false\n    })\n  }\n\n  private checkNestedScroll(\n    node: HTMLElement,\n    { deltaX, deltaY }: { deltaX: number; deltaY: number }\n  ) {\n    const time = Date.now()\n\n    // @ts-ignore\n    const cache = (node._lenis ??= {})\n\n    let hasOverflowX,\n      hasOverflowY,\n      isScrollableX,\n      isScrollableY,\n      scrollWidth,\n      scrollHeight,\n      clientWidth,\n      clientHeight\n\n    const gestureOrientation = this.options.gestureOrientation\n\n    if (time - (cache.time ?? 0) > 2000) {\n      cache.time = Date.now()\n\n      const computedStyle = window.getComputedStyle(node)\n      cache.computedStyle = computedStyle\n\n      const overflowXString = computedStyle.overflowX\n      const overflowYString = computedStyle.overflowY\n\n      hasOverflowX = ['auto', 'overlay', 'scroll'].includes(overflowXString)\n      hasOverflowY = ['auto', 'overlay', 'scroll'].includes(overflowYString)\n      cache.hasOverflowX = hasOverflowX\n      cache.hasOverflowY = hasOverflowY\n\n      if (!hasOverflowX && !hasOverflowY) return false // if no overflow, it's not scrollable no matter what, early return saves some computations\n      if (gestureOrientation === 'vertical' && !hasOverflowY) return false\n      if (gestureOrientation === 'horizontal' && !hasOverflowX) return false\n\n      scrollWidth = node.scrollWidth\n      scrollHeight = node.scrollHeight\n\n      clientWidth = node.clientWidth\n      clientHeight = node.clientHeight\n\n      isScrollableX = scrollWidth > clientWidth\n      isScrollableY = scrollHeight > clientHeight\n\n      cache.isScrollableX = isScrollableX\n      cache.isScrollableY = isScrollableY\n      cache.scrollWidth = scrollWidth\n      cache.scrollHeight = scrollHeight\n      cache.clientWidth = clientWidth\n      cache.clientHeight = clientHeight\n    } else {\n      isScrollableX = cache.isScrollableX\n      isScrollableY = cache.isScrollableY\n      hasOverflowX = cache.hasOverflowX\n      hasOverflowY = cache.hasOverflowY\n      scrollWidth = cache.scrollWidth\n      scrollHeight = cache.scrollHeight\n      clientWidth = cache.clientWidth\n      clientHeight = cache.clientHeight\n    }\n\n    if (\n      (!hasOverflowX && !hasOverflowY) ||\n      (!isScrollableX && !isScrollableY)\n    ) {\n      return false\n    }\n\n    if (gestureOrientation === 'vertical' && (!hasOverflowY || !isScrollableY))\n      return false\n\n    if (\n      gestureOrientation === 'horizontal' &&\n      (!hasOverflowX || !isScrollableX)\n    )\n      return false\n\n    let orientation: 'x' | 'y' | undefined\n\n    if (gestureOrientation === 'horizontal') {\n      orientation = 'x'\n    } else if (gestureOrientation === 'vertical') {\n      orientation = 'y'\n    } else {\n      const isScrollingX = deltaX !== 0\n      const isScrollingY = deltaY !== 0\n\n      if (isScrollingX && hasOverflowX && isScrollableX) {\n        orientation = 'x'\n      }\n\n      if (isScrollingY && hasOverflowY && isScrollableY) {\n        orientation = 'y'\n      }\n    }\n\n    if (!orientation) return false\n\n    let scroll, maxScroll, delta, hasOverflow, isScrollable\n\n    if (orientation === 'x') {\n      scroll = node.scrollLeft\n      maxScroll = scrollWidth - clientWidth\n      delta = deltaX\n\n      hasOverflow = hasOverflowX\n      isScrollable = isScrollableX\n    } else if (orientation === 'y') {\n      scroll = node.scrollTop\n      maxScroll = scrollHeight - clientHeight\n      delta = deltaY\n\n      hasOverflow = hasOverflowY\n      isScrollable = isScrollableY\n    } else {\n      return false\n    }\n\n    const willScroll = delta > 0 ? scroll < maxScroll : scroll > 0\n\n    return willScroll && hasOverflow && isScrollable\n  }\n\n  /**\n   * The root element on which lenis is instanced\n   */\n  get rootElement() {\n    return (\n      this.options.wrapper === window\n        ? document.documentElement\n        : this.options.wrapper\n    ) as HTMLElement\n  }\n\n  /**\n   * The limit which is the maximum scroll value\n   */\n  get limit() {\n    if (this.options.__experimental__naiveDimensions) {\n      if (this.isHorizontal) {\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\n      } else {\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\n      }\n    } else {\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\n    }\n  }\n\n  /**\n   * Whether or not the scroll is horizontal\n   */\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  /**\n   * The actual scroll value\n   */\n  get actualScroll() {\n    // value browser takes into account\n    // it has to be this way because of DOCTYPE declaration\n    const wrapper = this.options.wrapper as Window | HTMLElement\n\n    return this.isHorizontal\n      ? (wrapper as Window).scrollX ?? (wrapper as HTMLElement).scrollLeft\n      : (wrapper as Window).scrollY ?? (wrapper as HTMLElement).scrollTop\n  }\n\n  /**\n   * The current scroll value\n   */\n  get scroll() {\n    return this.options.infinite\n      ? modulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  /**\n   * The progress of the scroll relative to the limit\n   */\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  /**\n   * Current scroll state\n   */\n  get isScrolling() {\n    return this._isScrolling\n  }\n\n  private set isScrolling(value: Scrolling) {\n    if (this._isScrolling !== value) {\n      this._isScrolling = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is stopped\n   */\n  get isStopped() {\n    return this._isStopped\n  }\n\n  private set isStopped(value: boolean) {\n    if (this._isStopped !== value) {\n      this._isStopped = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is locked\n   */\n  get isLocked() {\n    return this._isLocked\n  }\n\n  private set isLocked(value: boolean) {\n    if (this._isLocked !== value) {\n      this._isLocked = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is smooth scrolling\n   */\n  get isSmooth() {\n    return this.isScrolling === 'smooth'\n  }\n\n  /**\n   * The class name applied to the wrapper element\n   */\n  get className() {\n    let className = 'lenis'\n    if (this.options.autoToggle) className += ' lenis-autoToggle'\n    if (this.isStopped) className += ' lenis-stopped'\n    if (this.isLocked) className += ' lenis-locked'\n    if (this.isScrolling) className += ' lenis-scrolling'\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\n    return className\n  }\n\n  private updateClassName() {\n    this.cleanUpClassName()\n\n    this.rootElement.className =\n      `${this.rootElement.className} ${this.className}`.trim()\n  }\n\n  private cleanUpClassName() {\n    this.rootElement.className = this.rootElement.className\n      .replace(/lenis(-\\w+)?/g, '')\n      .trim()\n  }\n}\n", "import type { Environment } from 'src/types';\n\nexport const getEnvironment = (): Environment => {\n  const { host } = window.location;\n  return host.includes('webflow.io') ? 'staging' : 'production';\n};\n", "export const getParams = (): Record<string, string> => {\n  const params = new URLSearchParams(window.location.search);\n  return Object.fromEntries(params.entries());\n};\n", "export * from './animations';\nexport * from './config';\nexport * from './dom';\nexport * from './events';\n", "import type { ScrollTrigger } from 'gsap/ScrollTrigger';\n\n/**\n * Available trigger types for animations\n */\nexport type TriggerType = 'load' | 'entrance' | 'scrub' | 'event' | 'sequence';\n\n/**\n * Animation instance state\n */\nexport type AnimationState = 'pending' | 'playing' | 'completed';\n\n/**\n * ScrollTrigger configuration for timeline\n */\nexport interface ScrollTriggerConfig {\n  start?: string;\n  end?: string;\n  scrub?: boolean | number;\n  pin?: boolean;\n  toggleActions?: string;\n  markers?: boolean;\n  invalidateOnRefresh?: boolean;\n  refreshPriority?: number;\n  onUpdate?: (self: ScrollTrigger) => void;\n}\n\n/**\n * Timeline creator function signature\n */\nexport type TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => gsap.core.Timeline | undefined;\n\n/**\n * Timeline definition with its configuration\n */\nexport interface TimelineDefinition {\n  create: TimelineCreator;\n  triggerConfig?: ScrollTriggerConfig;\n  defaultTrigger?: TriggerType;\n}\n\n/**\n * Animation instance tracking\n */\nexport interface AnimationInstance {\n  id: string;\n  element: HTMLElement;\n  timeline: gsap.core.Timeline;\n  type: string; // Animation name (hero, modern, etc.)\n  trigger: TriggerType;\n  state: AnimationState;\n  scrollTrigger?: ScrollTrigger;\n  triggerConfig?: ScrollTriggerConfig;\n  context?: Record<string, string>;\n}\n\n/**\n * Animation registry entry\n */\nexport interface AnimationRegistryEntry {\n  timeline: TimelineCreator;\n  config?: ScrollTriggerConfig;\n  defaultTrigger?: TriggerType;\n}\n\n/**\n * Animation event data\n */\nexport interface AnimationEventData {\n  id: string;\n  type: string;\n  element: HTMLElement;\n  state?: AnimationState;\n  progress?: number;\n  context?: Record<string, string>;\n}\n\n/**\n * Post-hero check result\n */\nexport interface PostHeroCheck {\n  instance: AnimationInstance;\n  shouldPlay: boolean;\n  reason?: 'passed-trigger' | 'in-viewport' | 'not-ready';\n}\n", "export type Environment = 'staging' | 'production';\n", "/**\n * Container observer callback function type\n */\nexport type ContainerObserverCallback = (match: boolean) => void;\n\n/**\n * Extended HTMLElement interface with observeContainer method\n * This extends the native HTMLElement to include the observeContainer method\n * provided by the match-container.js library\n */\ndeclare global {\n  interface HTMLElement {\n    /**\n     * Observe container for media query matches\n     * @param mediaQuery - CSS media query string (e.g., '(width < 48rem)')\n     * @param callback - Function called when media query match state changes\n     */\n    observeContainer(mediaQuery: string, callback: ContainerObserverCallback): void;\n  }\n}\n\n/**\n * Type guard to check if an element has the observeContainer method\n * Useful for runtime checks when the library might not be loaded\n */\nexport function hasObserveContainer(element: HTMLElement): element is HTMLElement & {\n  observeContainer(mediaQuery: string, callback: ContainerObserverCallback): void;\n} {\n  return (\n    typeof (element as unknown as { observeContainer?: unknown }).observeContainer === 'function'\n  );\n}\n\nexport {};\n", "export enum Events {\n  APP_INITIALIZED = 'app:initialized',\n  ANIMATIONS_INITIALIZED = 'animations:initialized',\n  ANIMATION_STARTED = 'animation:started',\n  ANIMATION_COMPLETED = 'animation:completed',\n  ANIMATION_PAUSED = 'animation:paused',\n  ANIMATION_RESUMED = 'animation:resumed',\n}\n", "import { App } from '$app';\n\n/**\n * Initialize GSAP with global defaults\n * Should be called once on app initialization\n */\nexport const initGSAPDefaults = (): void => {\n  const app = App.getInstance();\n\n  // Global GSAP defaults\n  gsap.defaults({\n    duration: 2,\n    ease: 'expo.inOut',\n  });\n\n  // ScrollTrigger global defaults\n  ScrollTrigger.defaults({\n    markers: app.params.debug !== undefined && app.environment === 'staging', // Show markers if debug\n  });\n\n  // // Refresh ScrollTrigger on window events\n  // ScrollTrigger.config({\n  //   autoRefreshEvents: 'visibilitychange,DOMContentLoaded,load,resize',\n  // });\n};\n\n/**\n * Animation-specific default configurations\n * These can be overridden in individual timeline definitions\n */\nexport const ANIMATION_DEFAULTS = {\n  load: {\n    duration: 2,\n    stagger: 0.1,\n  },\n  entrance: {\n    duration: 1.5,\n    toggleActions: 'play none none none',\n  },\n  scrub: {\n    scrub: 1,\n    ease: 'expo.inOut',\n    pin: false,\n  },\n} as const;\n\n/**\n * Common ScrollTrigger configurations\n */\nexport const TRIGGER_DEFAULTS = {\n  entrance: {\n    start: 'top 80%',\n    end: 'bottom top',\n    toggleActions: 'play none none none',\n  },\n  scrub: {\n    start: 'top bottom',\n    end: 'bottom top',\n    scrub: 1,\n  },\n} as const;\n", "// GSAP and ScrollTrigger are loaded globally by Webflow\n\nimport { App } from '$app';\nimport { Events } from '$events';\nimport type { AnimationEventData, AnimationInstance, TriggerType } from '$types';\n\nimport { AnimationFactory } from './factory';\n\nexport class AnimationManager {\n  private static instance: AnimationManager;\n  private app: App;\n  private factory: AnimationFactory;\n  private instances: AnimationInstance[] = [];\n  private animationQueue: AnimationInstance[] = [];\n  private heroInstance: AnimationInstance | null = null;\n  private isPlayingQueue = false;\n  private instanceIdCounter = 0;\n  private initialized = false;\n  private allowNaturalTriggers = false; // Flag to control when natural triggers can fire\n\n  private constructor() {\n    this.app = App.getInstance();\n    this.factory = new AnimationFactory();\n  }\n\n  public static getInstance(): AnimationManager {\n    if (!AnimationManager.instance) {\n      AnimationManager.instance = new AnimationManager();\n    }\n    return AnimationManager.instance;\n  }\n\n  /**\n   * Initialize the animation system\n   */\n  public initialize(): void {\n    if (this.initialized) return;\n\n    console.log('Initializing animation system');\n\n    // Step 1: Scan DOM and create all animations (none play automatically)\n    this.scanAndCreateAnimations();\n\n    console.log(`Created ${this.instances.length} animation instances`);\n    console.log(this.instances);\n    this.initialized = true;\n  }\n\n  /**\n   * App is ready - determine what should play\n   */\n  public appReady(): void {\n    console.log('App ready, determining animation playback order');\n\n    // Step 2: Find hero and check if visible\n    this.heroInstance = this.instances.find((i) => i.type === 'hero') || null;\n\n    // Step 3: Check hero visibility\n    let heroVisible = false;\n    if (this.heroInstance && this.heroInstance.scrollTrigger) {\n      heroVisible = this.heroInstance.scrollTrigger.isActive;\n\n      if (!heroVisible) {\n        // Set hero to final frame if not visible\n        this.heroInstance.timeline.progress(1);\n      }\n    }\n\n    // Step 4: Find visible entrance animations\n    const visibleEntranceAnimations = this.instances.filter((instance) => {\n      if (instance.trigger !== 'entrance') return false;\n      if (!instance.scrollTrigger) return false;\n\n      // Check if animation trigger has been passed\n      return instance.scrollTrigger.isActive;\n    });\n\n    console.log(`Found ${visibleEntranceAnimations.length} visible entrance animations`);\n\n    // Step 5: Build playback queue\n    if (heroVisible && this.heroInstance) {\n      this.animationQueue.push(this.heroInstance);\n    }\n\n    // Step 6: Add visible entrance animations to queue (in DOM order)\n    visibleEntranceAnimations.forEach((animation) => {\n      this.animationQueue.push(animation);\n    });\n\n    // Start playing the queue\n    if (this.animationQueue.length > 0) {\n      console.log(`Starting animation queue with ${this.animationQueue.length} animations`);\n      this.playNextInQueue();\n    }\n\n    // Step 7: Allow natural ScrollTrigger animations after queue is set up\n    this.allowNaturalTriggers = true;\n\n    this.app.eventBus.on(Events.ANIMATION_COMPLETED, (eventData) => {\n      if (eventData.type === 'hero') {\n        this.refresh();\n      }\n    });\n  }\n\n  /**\n   * Scan DOM for animation elements and create instances\n   */\n  private scanAndCreateAnimations(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-animation]');\n\n    elements.forEach((element) => {\n      const type = element.getAttribute('data-animation');\n      if (!type) return;\n\n      const trigger = (element.getAttribute('data-trigger') as TriggerType) || 'entrance';\n\n      // Get context from data-context-* attributes\n      const context = this.extractContext(element);\n\n      // Create timeline and config from factory\n      const { timeline, triggerConfig } = this.factory.create(type, element, context);\n      if (!timeline) return;\n\n      // Generate unique instance ID\n      const id = `${type}_${(this.instanceIdCounter += 1)}`;\n\n      const instance: AnimationInstance = {\n        id,\n        element,\n        type,\n        timeline,\n        trigger,\n        state: 'pending',\n        triggerConfig,\n        context,\n      };\n\n      // Set up ScrollTrigger for all scroll-based animations\n      if ((trigger === 'entrance' || trigger === 'scrub' || trigger === 'load') && triggerConfig) {\n        // For scrub animations, attach the timeline directly\n        if (trigger === 'scrub') {\n          instance.scrollTrigger = ScrollTrigger.create({\n            trigger: element,\n            ...triggerConfig,\n            animation: timeline,\n          });\n        } else {\n          // For entrance/load animations, create without animation\n          // We'll control playback manually\n          instance.scrollTrigger = ScrollTrigger.create({\n            trigger: element,\n            ...triggerConfig,\n            onToggle: (self) => {\n              // Only allow natural triggers after queue is built\n              if (!this.allowNaturalTriggers) return;\n\n              // For entrance animations not in queue, let them play naturally\n              if (\n                trigger === 'entrance' &&\n                instance.state === 'pending' &&\n                self.isActive &&\n                !this.animationQueue.includes(instance)\n              ) {\n                console.log(`ScrollTrigger playing ${type} naturally`);\n                this.playAnimation(instance);\n              }\n            },\n          });\n        }\n      }\n\n      // Set up event listener for event-triggered animations\n      if (trigger === 'event') {\n        const eventName = element.getAttribute('data-event') || type;\n        this.app.eventBus.on(eventName, (data: Record<string, any>) => {\n          if (instance.state === 'pending') {\n            this.playAnimation(instance, data);\n          }\n        });\n      }\n\n      this.instances.push(instance);\n    });\n\n    // Emit initialization complete\n    this.app.eventBus.emit(Events.ANIMATIONS_INITIALIZED, {\n      instanceCount: this.instances.length,\n    });\n  }\n\n  /**\n   * Play the next animation in the queue\n   */\n  private playNextInQueue(): void {\n    if (this.animationQueue.length === 0) {\n      this.isPlayingQueue = false;\n      console.log('Animation queue complete');\n      return;\n    }\n\n    this.isPlayingQueue = true;\n    const nextAnimation = this.animationQueue.shift()!;\n\n    console.log(`Playing queued animation: ${nextAnimation.type} (${nextAnimation.id})`);\n\n    // Set up completion handler to play next\n    nextAnimation.timeline.eventCallback('onStart', () => {\n      setTimeout(() => {\n        this.playNextInQueue();\n      }, 500);\n    });\n    nextAnimation.timeline.eventCallback('onComplete', () => {\n      console.log('Animation completed', nextAnimation);\n      ScrollTrigger.refresh();\n      this.handleAnimationComplete(nextAnimation);\n    });\n\n    this.playAnimation(nextAnimation);\n  }\n\n  /**\n   * Play a specific animation\n   */\n  private playAnimation(instance: AnimationInstance, eventData?: Record<string, any>): void {\n    if (instance.state !== 'pending') return;\n\n    console.log(`Playing animation: ${instance.type} (${instance.id})`);\n\n    // Update state\n    instance.state = 'playing';\n\n    // Emit start event\n    this.handleAnimationStart(instance);\n\n    // Play timeline\n    instance.timeline.restart(true);\n\n    // Set up completion if not in queue (queue handles its own completion)\n    if (!this.isPlayingQueue) {\n      instance.timeline.eventCallback('onComplete', () => {\n        this.handleAnimationComplete(instance);\n      });\n    }\n  }\n\n  /**\n   * Extract context data from element attributes\n   */\n  private extractContext(element: HTMLElement): Record<string, any> {\n    const context: Record<string, any> = {};\n    const { attributes } = element;\n\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      if (attr.name.startsWith('data-context-')) {\n        const key = attr.name.replace('data-context-', '');\n        context[key] = attr.value;\n      }\n    }\n\n    return context;\n  }\n\n  /**\n   * Handle animation start\n   */\n  private handleAnimationStart(instance: AnimationInstance): void {\n    const eventData: AnimationEventData = {\n      id: instance.id,\n      type: instance.type,\n      element: instance.element,\n      state: 'playing',\n      context: instance.context,\n    };\n\n    // Emit generic animation started event\n    this.app.eventBus.emit(Events.ANIMATION_STARTED, null, eventData);\n  }\n\n  /**\n   * Handle animation completion\n   */\n  private handleAnimationComplete(instance: AnimationInstance): void {\n    instance.state = 'completed';\n\n    const eventData: AnimationEventData = {\n      id: instance.id,\n      type: instance.type,\n      element: instance.element,\n      state: 'completed',\n      context: instance.context,\n    };\n\n    // Emit generic animation completed event\n    this.app.eventBus.emit(Events.ANIMATION_COMPLETED, null, eventData);\n  }\n\n  /**\n   * Get all instances of a specific animation type\n   */\n  public getInstancesByType(type: string): AnimationInstance[] {\n    return this.instances.filter((i) => i.type === type);\n  }\n\n  /**\n   * Get a specific instance by ID\n   */\n  public getInstance(id: string): AnimationInstance | undefined {\n    return this.instances.find((i) => i.id === id);\n  }\n\n  /**\n   * Manually trigger an animation\n   */\n  public trigger(type: string, context?: Record<string, any>): void {\n    const instances = this.getInstancesByType(type);\n    instances.forEach((instance) => {\n      if (instance.state === 'pending') {\n        this.playAnimation(instance, context);\n      }\n    });\n  }\n\n  /**\n   * Refresh all ScrollTriggers\n   */\n  public refresh(): void {\n    ScrollTrigger.refresh();\n  }\n\n  /**\n   * Clean up all animations\n   */\n  public destroy(): void {\n    this.instances.forEach((instance) => {\n      instance.timeline.kill();\n      instance.scrollTrigger?.kill();\n    });\n    this.instances = [];\n    this.animationQueue = [];\n    this.initialized = false;\n  }\n}\n", "import type { ScrollTriggerConfig } from '$types';\n\nimport { ANIMATION_DEFAULTS, TRIGGER_DEFAULTS } from './config';\nimport { timelineRegistry } from './registry';\n\n/**\n * Factory for creating animation timelines with their configurations\n */\nexport class AnimationFactory {\n  /**\n   * Create a timeline with its configuration\n   */\n  public create(\n    type: string,\n    element: HTMLElement,\n    context?: Record<string, string>\n  ): {\n    timeline: gsap.core.Timeline | undefined;\n    triggerConfig?: ScrollTriggerConfig;\n  } {\n    const definition = timelineRegistry[type];\n\n    if (!definition) {\n      // eslint-disable-next-line no-console\n      console.warn(`Animation type \"${type}\" not found in registry`);\n      // Return a dummy timeline that does nothing\n      const timeline = gsap.timeline({ paused: true });\n      return { timeline };\n    }\n\n    // Get the trigger type\n    const trigger = element.getAttribute('data-trigger') || definition.defaultTrigger || 'entrance';\n\n    // Get animation defaults for this trigger type\n    const animationDefaults =\n      trigger === 'load'\n        ? ANIMATION_DEFAULTS.load\n        : trigger === 'entrance'\n          ? ANIMATION_DEFAULTS.entrance\n          : trigger === 'scrub'\n            ? ANIMATION_DEFAULTS.scrub\n            : {};\n\n    // Merge context with animation defaults\n    const mergedContext = {\n      ...animationDefaults,\n      ...context,\n    };\n\n    // Create the timeline with merged context\n    const timeline = definition.create(element, mergedContext);\n\n    // Get trigger configuration\n    let triggerConfig: ScrollTriggerConfig | undefined;\n\n    if (definition.triggerConfig) {\n      // Use timeline-specific config\n      triggerConfig = definition.triggerConfig;\n    } else {\n      // Use default config based on trigger type\n      const trigger =\n        element.getAttribute('data-trigger') || definition.defaultTrigger || 'entrance';\n\n      if (trigger === 'entrance') {\n        triggerConfig = TRIGGER_DEFAULTS.entrance;\n      } else if (trigger === 'scrub') {\n        triggerConfig = TRIGGER_DEFAULTS.scrub;\n      }\n    }\n\n    return {\n      timeline,\n      triggerConfig,\n    };\n  }\n\n  /**\n   * Check if an animation type exists\n   */\n  public has(type: string): boolean {\n    return type in timelineRegistry;\n  }\n\n  /**\n   * Get all available animation types\n   */\n  public getAvailableTypes(): string[] {\n    return Object.keys(timelineRegistry);\n  }\n}\n", "import type { TimelineDefinition } from '$types';\n\nimport { aiTeamTimeline, aiTeamTriggerConfig } from './timelines/aiTeam';\nimport { blogCardTimeline, blogCardTriggerConfig } from './timelines/blogCard';\nimport { cardFadeTimeline } from './timelines/cardFade';\nimport { cardFlipTimeline, cardFlipTriggerConfig } from './timelines/cardFlip';\nimport { contentHeaderTimeline, contentHeaderTriggerConfig } from './timelines/contentHeader';\nimport { footerTimeline, footerTriggerConfig } from './timelines/footer';\nimport { heroTimeline, heroTriggerConfig } from './timelines/hero';\nimport { homeHeroTimeline, homeHeroTriggerConfig } from './timelines/homeHero';\nimport { industriesTimeline, industriesTriggerConfig } from './timelines/industries';\nimport { logosTimeline, logosTriggerConfig } from './timelines/logos';\nimport { modernTimeline, modernTriggerConfig } from './timelines/modern';\nimport { panelsTimeline, panelsTriggerConfig } from './timelines/panels';\nimport { revealTimeline, revealTriggerConfig } from './timelines/reveal';\n\n/**\n * Central registry of all available animations\n * Maps animation names to their timeline creators and configurations\n */\nexport const timelineRegistry: Record<string, TimelineDefinition> = {\n  // nav: {\n  //   create: navTimeline,\n  //   triggerConfig: navTriggerConfig,\n  //   defaultTrigger: 'scrub',\n  // },\n\n  homeHero: {\n    create: homeHeroTimeline,\n    triggerConfig: homeHeroTriggerConfig,\n    defaultTrigger: 'scrub',\n  },\n\n  // Hero animation - typically loads on page load\n  hero: {\n    create: heroTimeline,\n    triggerConfig: heroTriggerConfig,\n    defaultTrigger: 'load',\n  },\n\n  logos: {\n    create: logosTimeline,\n    triggerConfig: logosTriggerConfig,\n    defaultTrigger: 'entrance',\n  },\n\n  industries: {\n    create: industriesTimeline,\n    triggerConfig: industriesTriggerConfig,\n    defaultTrigger: 'scrub',\n  },\n\n  // Modern section animation - entrance on scroll\n  modern: {\n    create: modernTimeline,\n    triggerConfig: modernTriggerConfig,\n    defaultTrigger: 'entrance',\n  },\n\n  // Panel animation - scrubs with scroll\n  panel: {\n    create: panelsTimeline,\n    triggerConfig: panelsTriggerConfig,\n    defaultTrigger: 'scrub',\n  },\n\n  footer: {\n    create: footerTimeline,\n    triggerConfig: footerTriggerConfig,\n    defaultTrigger: 'scrub',\n  },\n\n  reveal: {\n    create: revealTimeline,\n    triggerConfig: revealTriggerConfig,\n    defaultTrigger: 'scrub',\n  },\n\n  cardFlip: {\n    create: cardFlipTimeline,\n    triggerConfig: cardFlipTriggerConfig,\n    defaultTrigger: 'entrance',\n  },\n\n  cardFade: {\n    create: cardFadeTimeline,\n    triggerConfig: cardFlipTriggerConfig,\n    defaultTrigger: 'entrance',\n  },\n\n  contentHeader: {\n    create: contentHeaderTimeline,\n    triggerConfig: contentHeaderTriggerConfig,\n    defaultTrigger: 'entrance',\n  },\n\n  aiTeam: {\n    create: aiTeamTimeline,\n    triggerConfig: aiTeamTriggerConfig,\n    defaultTrigger: 'scrub',\n  },\n\n  blogCard: {\n    create: blogCardTimeline,\n    triggerConfig: blogCardTriggerConfig,\n    defaultTrigger: 'entrance',\n  },\n};\n\n/**\n * Get a timeline definition by name\n */\nexport function getTimelineDefinition(name: string): TimelineDefinition | undefined {\n  return timelineRegistry[name];\n}\n\n/**\n * Check if a timeline exists\n */\nexport function hasTimeline(name: string): boolean {\n  return name in timelineRegistry;\n}\n\n/**\n * Get all available timeline names\n */\nexport function getTimelineNames(): string[] {\n  return Object.keys(timelineRegistry);\n}\n", "import { attrs } from '$config/constants';\nimport type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\nexport const aiTeamTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  console.log('aiTeamTimeline', { context });\n  // Find elements to animate\n  const track = queryElement(`[${attrs.elements}=\"track\"]`, element);\n  if (!track) return;\n  const wrap = queryElement(`[${attrs.elements}=\"wrap\"]`, track);\n  if (!wrap) return;\n\n  const links = queryElements<HTMLAnchorElement>(`[${attrs.elements}=\"link\"]`, wrap);\n  const backgrounds = queryElements<HTMLElement>(`[${attrs.elements}=\"background\"]`, wrap);\n  const thumbnails = queryElements<HTMLImageElement>(`[${attrs.elements}=\"thumbnail\"]`, wrap);\n  const names = queryElements<HTMLElement>(`[${attrs.elements}=\"name\"]`, wrap);\n  const roles = queryElements<HTMLElement>(`[${attrs.elements}=\"role\"]`, wrap);\n  const descriptions = queryElements<HTMLElement>(`[${attrs.elements}=\"description\"]`, wrap);\n  const mobileDescriptions = queryElements<HTMLElement>(\n    `[${attrs.elements}=\"description-mobile\"]`,\n    wrap\n  );\n\n  // Position elements as needed\n  const wrapHeight = wrap.getBoundingClientRect().height;\n  track.style.height = `${wrapHeight * 4}px`;\n  wrap.style.top = `${(window.innerHeight - wrapHeight) / 2}px`;\n\n  const defaults = { ease: context?.ease || 'none' };\n  const tl = gsap.timeline({ defaults });\n\n  links.forEach((link, index) => {\n    // if (index === 0) tl.addLabel(`link${index}`);\n\n    if (index !== 0) {\n      gsap.set(backgrounds[index], { '--clip': '100%' });\n      gsap.set(thumbnails[index], { '--clip': '100%' });\n\n      tl.from(link, { backgroundColor: 'transparent', color: 'var(--swatch--light-100)' }, '<');\n      tl.to(\n        links[index - 1],\n        { backgroundColor: 'transparent', color: 'var(--swatch--light-100)' },\n        '<'\n      );\n\n      tl.to(backgrounds[index], { '--clip': '0%' }, '<');\n      tl.to(thumbnails[index], { '--clip': '0%' }, '<0.1');\n    }\n\n    // const nameSplit = createSplitText(names[index], defaults, 'words', index, names.length);\n    // const roleSplit = createSplitText(roles[index], defaults, 'words', index, roles.length);\n    // const descriptionSplit = createSplitText(\n    //   descriptions[index],\n    //   defaults,\n    //   'lines',\n    //   index,\n    //   descriptions.length\n    // );\n    // const mobileDescriptionSplit = createSplitText(\n    //   mobileDescriptions[index],\n    //   defaults,\n    //   'lines',\n    //   index,\n    //   mobileDescriptions.length,\n    //   index !== 0 ? () => tl.addLabel(`link${index}`) : undefined\n    // );\n\n    // tl.add(nameSplit.animation, '<0.1');\n    // tl.add(roleSplit.animation, '<0.1');\n    // tl.add(descriptionSplit.animation, '<0.1');\n    // tl.add(mobileDescriptionSplit.animation, '<');\n\n    const nameSplit = new SplitText(names[index], { type: 'words', mask: 'words' });\n    const roleSplit = new SplitText(roles[index], { type: 'words', mask: 'words' });\n    const descriptionSplit = new SplitText(descriptions[index], { type: 'lines', mask: 'lines' });\n    const mobileDescriptionSplit = new SplitText(mobileDescriptions[index], {\n      type: 'lines',\n      mask: 'lines',\n    });\n\n    if (index !== 0) {\n      tl.from(nameSplit.words, { yPercent: 100, stagger: 0.05 }, '<0.1');\n      tl.from(roleSplit.words, { yPercent: 100, stagger: 0.05 }, '<0.1');\n      tl.from(descriptionSplit.lines, { yPercent: 100, stagger: 0.05 }, '<0.1');\n      tl.from(mobileDescriptionSplit.lines, { yPercent: 100, stagger: 0.05 }, '<');\n    }\n\n    // if (index !== 0) tl.addLabel(`link${index}`);\n    tl.addLabel(`link${index}`);\n\n    if (index !== links.length - 1) {\n      tl.to(nameSplit.words, { yPercent: -100, stagger: 0.05, duration: 1 }, '> 0.5');\n      tl.to(roleSplit.words, { yPercent: -100, stagger: 0.05, duration: 1 }, '<');\n      tl.to(descriptionSplit.lines, { yPercent: -100, stagger: 0.05, duration: 1 }, '<');\n      tl.to(mobileDescriptionSplit.lines, { yPercent: -100, stagger: 0.05, duration: 1 }, '<');\n    }\n\n    link.addEventListener('click', () => {\n      const { scrollTrigger } = tl;\n      if (!scrollTrigger) return;\n\n      const position =\n        scrollTrigger.start +\n        (scrollTrigger.end - scrollTrigger.start) * (tl.labels[`link${index}`] / tl.duration());\n\n      window.scrollTo({ top: position, behavior: 'smooth' });\n    });\n  });\n\n  return tl;\n};\n\n// function createSplitText(\n//   element: HTMLElement,\n//   defaults: Record<string, string>,\n//   type: 'words' | 'lines',\n//   index: number,\n//   totalLength: number,\n//   onComplete?: () => void\n// ): SplitText & { animation: gsap.core.Timeline } {\n//   let animation: gsap.core.Timeline;\n\n//   const splitText = new SplitText(element, {\n//     type,\n//     mask: type,\n//     autoSplit: true,\n//     onSplit: (self) => {\n//       const splitTl = gsap.timeline({ defaults });\n//       const targets = self[type];\n\n//       console.log('createSplitText', { targets, index, totalLength });\n\n//       // Add the \"from\" animation (only for non-first items)\n//       if (index !== 0) {\n//         console.log('adding from animation');\n//         splitTl.from(targets, { yPercent: 100, stagger: 0.05 }, '<0.1');\n//       }\n\n//       // Add the \"to\" animation (only for non-last items)\n//       if (index !== totalLength - 1) {\n//         console.log('adding to animation');\n//         splitTl.to(targets, { yPercent: -100, stagger: 0.05 }, '<');\n//       }\n\n//       // Call the completion callback\n//       if (onComplete) {\n//         console.log('calling onComplete');\n//         splitTl.call(onComplete);\n//       }\n\n//       // Store the animation reference\n//       animation = splitTl;\n//       return splitTl;\n//     },\n//   });\n\n//   Object.defineProperty(splitText, 'animation', {\n//     get: () => animation,\n//     enumerable: true,\n//     configurable: true,\n//   });\n\n//   return splitText as SplitText & { animation: gsap.core.Timeline };\n// }\n\nconst getStartAndEnd = (): { start: string; end: string } => {\n  const element = queryElement(`[${attrs.animations}=\"aiTeam\"]`);\n  if (!element) return { start: 'top top', end: 'bottom bottom' };\n  const wrap = queryElement(`[${attrs.elements}=\"wrap\"]`, element);\n  if (!wrap) return { start: 'top top', end: 'bottom bottom' };\n  const wrapHeight = wrap.getBoundingClientRect().height;\n  const topAndBottom = (window.innerHeight - wrapHeight) / 2;\n  return {\n    start: `top ${topAndBottom}`,\n    end: `bottom ${window.innerHeight - topAndBottom}`,\n  };\n};\n\n/**\n * ScrollTrigger configuration for scrubbed panels animation\n * Scrubs through animation as user scrolls\n */\nexport const aiTeamTriggerConfig: ScrollTriggerConfig = {\n  start: getStartAndEnd().start,\n  end: getStartAndEnd().end,\n  scrub: 1,\n};\n", "export const attrs = {\n  animations: 'data-animation',\n  elements: 'data-element',\n};\n\nexport const values = {\n  heading: 'heading',\n  paragraph: 'paragraph',\n  buttonGroup: 'button-group',\n  button: 'button',\n};\n", "/**\n * Retrieves the DOM element based on the provided query and returns them in an array\n */\nexport const queryElement = <T extends HTMLElement>(\n  query: string,\n  parent: Element | Document = document\n): T | undefined => {\n  const element = parent.querySelector<T>(query);\n  return element ?? undefined;\n};\n", "/**\n * Retrieves the DOM elements based on the provided query and returns them in an array\n */\nexport const queryElements = <T extends HTMLElement | SVGElement>(\n  query: string,\n  parent: Element | Document = document\n): T[] => {\n  const elements = parent.querySelectorAll<T>(query);\n  return elements.length ? [...elements] : [];\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\n\nexport const blogCardTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({\n    paused: true,\n    defaults: {\n      duration: context?.duration || 1.5,\n      ease: context?.ease || 'expo.inOut',\n      clearProps: true,\n    },\n  });\n\n  // Find elements to animate\n  const parent = element.parentElement;\n\n  // Main content reveal\n  gsap.set(element, { opacity: 0, yPercent: 10 });\n  gsap.set(parent, { rotateX: 5 });\n  tl.to(element, { opacity: 1, yPercent: 0 });\n  tl.to(parent, { rotateX: 0 }, '<');\n\n  return tl;\n};\n\nexport const blogCardTriggerConfig: ScrollTriggerConfig = {\n  start: 'top bottom',\n  scrub: false,\n  toggleActions: 'play none none none',\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\nexport const cardFadeTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({\n    paused: true,\n    defaults: { duration: context?.duration || 1.5, ease: context?.ease || 'expo.inOut' },\n  });\n\n  // Find elements to animate\n  const cards = queryElements('[data-element=\"card\"]', element);\n  if (!cards.length) return;\n\n  // Build animation sequence\n  cards.forEach((card, index) => {\n    const background = queryElement<HTMLElement>('[data-card=\"background\"]', card);\n    tl.from(card, { y: '1.5rem', opacity: 0 }, `${index * 0.1}`);\n    if (background) tl.from(background, { height: '0%' }, '<');\n  });\n\n  return tl;\n};\n\nexport const cardFlipTriggerConfig: ScrollTriggerConfig = {\n  start: 'top center',\n  end: 'bottom center',\n  scrub: false,\n  toggleActions: 'play none none none',\n};\n", "import { Thresholds } from 'src/types/thresholds';\n\nimport type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { containerThreshold } from '$utils/containerThreshold';\nimport { debug } from '$utils/debug';\nimport { queryElements } from '$utils/queryElements';\n\nexport const cardFlipTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({\n    paused: true,\n    defaults: { duration: context?.duration || 1.5, ease: context?.ease || 'expo.inOut' },\n  });\n\n  // Find elements to animate\n  const cards = queryElements('[data-element=\"card\"]', element);\n  if (!cards.length) return;\n\n  const numberOfCards = cards.length;\n  const remainder = numberOfCards % 2;\n  const numberOfCardsNeeded = numberOfCards - remainder;\n\n  const leftCards = cards.slice(0, numberOfCardsNeeded / 2);\n  const rightCards = cards.slice(numberOfCards - numberOfCardsNeeded / 2);\n\n  const isAboveThreshold = () => containerThreshold(element, Thresholds.large, 'above');\n\n  // // Build animation sequence\n  gsap.set(cards, {\n    height: () => {\n      const maxCardHeight = Math.max(...cards.map((card) => card.getBoundingClientRect().height));\n      return `${maxCardHeight}px`;\n    },\n    zIndex: (index) => 4 - index,\n    opacity: (index) => 1 - index * 0.2,\n    y: (index) => (isAboveThreshold() ? `${index + 3}rem` : `${index * -100}%`),\n  });\n\n  element.observeContainer(`(width < ${Thresholds.large}rem)`, (match) => {\n    if (match) {\n      debug('log', 'cardFlipTimeline: (width < Thresholds.large)');\n      gsap.set(cards, { x: (index) => `${index}rem` });\n    } else {\n      debug('log', 'cardFlipTimeline: (width >= Thresholds.large)');\n      gsap.set(leftCards, { xPercent: 100 });\n      gsap.set(rightCards, { xPercent: -100 });\n    }\n  });\n\n  // Build animation sequence\n  tl.to(cards, { x: 0, xPercent: 0, opacity: 1, y: 0, stagger: 0.2 });\n\n  return tl;\n};\n\nexport const cardFlipTriggerConfig: ScrollTriggerConfig = {\n  start: 'top 80%',\n  end: 'bottom center',\n  scrub: false,\n  toggleActions: 'play none none none',\n};\n", "export enum Thresholds {\n  small = 30,\n  medium = 48,\n  large = 62,\n}\n", "import { Thresholds } from 'src/types/thresholds';\n\nexport const containerThreshold = (\n  container: HTMLElement,\n  threshold: Thresholds | number,\n  direction: 'above' | 'below' = 'below'\n) => {\n  // find out how many rems the container is using the root font size not 16\n  const rootFontSize = parseFloat(getComputedStyle(document.body).fontSize);\n\n  const containerRect = container.getBoundingClientRect();\n  const containerWidthInRems = containerRect.width / rootFontSize;\n\n  if (direction === 'above') return containerWidthInRems >= threshold;\n  return containerWidthInRems < threshold;\n};\n", "/* eslint-disable no-console */\nimport { App } from '$app';\n\nexport const debug = (type: 'log' | 'warn' | 'error', message: string, data?: unknown) => {\n  const app = App.getInstance();\n  const { environment } = app;\n  if (environment !== 'staging') return;\n\n  console[type](message, data);\n};\n", "import { attrs, values } from '$config/constants';\nimport type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\nexport const contentHeaderTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({\n    paused: true,\n    defaults: { duration: context?.duration || 1.5, ease: context?.ease || 'expo.inOut' },\n  });\n\n  // Find elements to animate\n  const heading = queryElement(`[${attrs.elements}=\"${values.heading}\"] > *`, element);\n  const paragraphs = queryElements(`[${attrs.elements}=\"${values.paragraph}\"] > *`, element);\n  const buttons = queryElements(`[${attrs.elements}=\"${values.button}\"]`, element);\n\n  // Main content reveal\n  if (heading) {\n    const splitHeading = new SplitText(heading, { type: 'lines', mask: 'lines' });\n    tl.from(splitHeading.lines, { yPercent: 100, stagger: 0.1 });\n  }\n\n  if (paragraphs.length > 0) {\n    paragraphs.forEach((paragraph, index) => {\n      const splitParagraph = new SplitText(paragraph, { type: 'lines', mask: 'lines' });\n      tl.from(\n        splitParagraph.lines,\n        { yPercent: 100, stagger: 0.1 },\n        index === 0 ? '<0.2' : '<0.05'\n      );\n    });\n  }\n\n  if (buttons.length > 0) {\n    tl.from(buttons, { opacity: 0, x: '1rem', stagger: 0.1 }, '<0.2');\n  }\n\n  return tl;\n};\n\nexport const contentHeaderTriggerConfig: ScrollTriggerConfig = {\n  start: 'top 80%',\n  end: 'bottom top',\n  scrub: false,\n  toggleActions: 'play none none none',\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\nexport const footerTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({\n    defaults: { duration: context?.duration || 1, ease: 'none', clearProps: true },\n  });\n\n  // Find child elements to animate\n  const inner = queryElement('[data-element=\"inner\"]');\n  const footer = queryElement('footer', element);\n\n  if (inner) {\n    tl.fromTo(\n      inner,\n      { y: 0, scaleX: 1, scaleY: 1 },\n      {\n        y: () => {\n          const spacers = queryElements('.u-section-spacer');\n          const lastSpacer = spacers[spacers.length - 1];\n          return (lastSpacer ? lastSpacer.getBoundingClientRect().height : 160) * -1;\n        },\n        transformOrigin: 'center bottom',\n      }\n    );\n  }\n\n  if (footer) {\n    tl.from(footer, { opacity: 0.5, yPercent: 10 }, 0);\n  }\n\n  return tl;\n};\n\nexport const footerTriggerConfig: ScrollTriggerConfig = {\n  start: 'top center',\n  end: 'bottom bottom',\n  scrub: 1,\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElement } from '$utils/queryElement';\n\nimport { moveY } from '../utils/moveY';\n\n/**\n * Hero animation - typically plays on page load\n * Animates the main hero section with staggered reveals\n */\nexport const heroTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({\n    paused: true,\n    defaults: {\n      duration: context?.duration || 2,\n      ease: context?.ease || 'expo.inOut',\n      clearProps: true,\n    },\n  });\n\n  // Find child elements to animate\n  const nav = queryElement(`.nav_component`);\n  const inner = queryElement('[data-element=\"inner\"]');\n  const title = queryElement('h1', element);\n\n  // Build animation sequence\n  if (nav) {\n    tl.from(nav, { opacity: 0, y: '-1rem' });\n  }\n\n  if (inner) {\n    tl.fromTo(\n      inner,\n      {\n        opacity: 0,\n        y: () => moveY(true).height,\n      },\n      {\n        opacity: 1,\n        y: 0,\n      },\n      0\n    );\n  }\n\n  if (title) {\n    // Create SplitText instance to split the title into lines\n    const splitTitle = new SplitText(title, { type: 'lines', mask: 'lines' });\n\n    // Animate the masks to reveal the text\n    tl.from(splitTitle.lines, { yPercent: 100, stagger: 0.01 }, 0.2);\n  }\n\n  // Add any context-specific modifications\n  if (context?.speed === 'fast') {\n    tl.timeScale(1.5);\n  } else if (context?.speed === 'slow') {\n    tl.timeScale(0.7);\n  }\n\n  return tl;\n};\n\nexport const heroTriggerConfig: ScrollTriggerConfig = {\n  start: 'bottom bottom',\n  end: 'bottom top',\n  scrub: false,\n  toggleActions: 'play none none none',\n};\n", "import { queryElement } from '$utils/queryElement';\n\nlet isUsed = false;\nexport const moveY = (using?: boolean) => {\n  if (using) isUsed = true;\n  const spacer = queryElement('.u-section-spacer');\n  const height = spacer ? spacer.getBoundingClientRect().height : 160;\n  return { height, isUsed };\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { debug } from '$utils/debug';\nimport { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\n/**\n * Hero animation - typically plays on page load\n * Animates the main hero section with staggered reveals\n */\nexport const homeHeroTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  debug('log', 'homeHeroTimeline', { element, context });\n  const tl = gsap.timeline({ defaults: { ease: context?.ease || 'expo.inOut' } });\n\n  // Find child elements to animate\n  const attr = 'data-home-hero';\n  const logo = queryElement<HTMLElement>(`[${attr}=\"logo\"]`, element);\n  const content = queryElement<HTMLElement>(`[${attr}=\"content\"]`, element);\n  const background = queryElement<HTMLElement>(`[${attr}=\"background\"]`, element);\n  const title = queryElement<HTMLElement>(`[${attr}=\"title\"]`, element);\n  const prompt = queryElement<HTMLElement>(`[${attr}=\"prompt\"]`, element);\n  const rings = queryElements<HTMLElement>(`[${attr}=\"ring\"]`, element);\n  const assets = queryElements<HTMLElement>(`[${attr}=\"asset\"]`, element);\n\n  if (!logo || !content || !background || !title || !prompt || !rings || !assets) {\n    console.warn('homeHeroTimeline', { logo, content, background, title, prompt, rings, assets });\n    return;\n  }\n\n  const firstAsset = assets[0];\n  const allOtherAssets = assets.slice(1).filter((asset) => !!getPositionVar(asset, '--ha-width'));\n\n  const titleSplit = new SplitText(title, { type: 'lines', mask: 'lines' });\n  const promptSplit = new SplitText(prompt, { type: 'lines', mask: 'lines' });\n\n  // Build animation sequence\n  tl.set(content, { clipPath: 'inset(50%)' });\n  tl.set(background, { opacity: 0, width: '0%', height: '0%' });\n\n  tl.to(background, { opacity: 1, duration: 0.25 });\n  tl.to(content, { clipPath: 'inset(0%)' }, '<');\n  tl.to(background, { width: '100%', height: '100%' }, '<');\n\n  tl.from(titleSplit.lines, { yPercent: 100, stagger: 0.1 }, '<0.1');\n  tl.from(promptSplit.lines, { yPercent: 100, stagger: 0.1 }, '<0.5');\n\n  tl.to(promptSplit.lines, { yPercent: -100, stagger: 0.1 });\n  tl.from(firstAsset, { opacity: 0, scale: 0.5, transformOrigin: 'center center' }, '<');\n  tl.to(title, { opacity: 0 }, '<');\n\n  tl.from(\n    rings,\n    { opacity: 0, width: (index, trigger) => trigger.offsetWidth / 2, stagger: 0.1 },\n    '<0.25'\n  );\n\n  allOtherAssets.forEach((asset, index) => {\n    const top = getPositionVar(asset, '--hl-top');\n    const bottom = getPositionVar(asset, '--hl-bottom');\n    const left = getPositionVar(asset, '--hl-left');\n    const right = getPositionVar(asset, '--hl-right');\n\n    const fromOptions: Record<string, number> = {\n      opacity: 0,\n      duration: 0.25,\n    };\n\n    if (top) fromOptions['--ha-top'] = top * 2;\n    if (bottom) fromOptions['--ha-bottom'] = bottom * 2;\n    if (left) fromOptions['--ha-left'] = left * 2;\n    if (right) fromOptions['--ha-right'] = right * 2;\n\n    const toOptions: Record<string, number> = {\n      opacity: 1,\n    };\n\n    if (top) toOptions['--ha-top'] = top;\n    if (bottom) toOptions['--ha-bottom'] = bottom;\n    if (left) toOptions['--ha-left'] = left;\n    if (right) toOptions['--ha-right'] = right;\n\n    tl.fromTo(asset, fromOptions, toOptions, index === 0 ? '>-1' : `<${index * 0.005}`);\n  });\n\n  return tl;\n};\n\nexport const homeHeroTriggerConfig: ScrollTriggerConfig = {\n  start: 'top top',\n  end: 'bottom bottom',\n  scrub: 1,\n};\n\nfunction getPositionVar(element: HTMLElement, varName: string) {\n  const computedStyle = getComputedStyle(element);\n  const value = computedStyle.getPropertyValue(varName);\n  if (value === '') return null;\n  return parseFloat(value);\n}\n", "import { Thresholds } from 'src/types/thresholds';\n\nimport type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { debug } from '$utils/debug';\nimport { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\n/**\n * Hero animation - typically plays on page load\n * Animates the main hero section with staggered reveals\n */\nexport const industriesTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  debug('log', 'industriesTimeline', { element, context });\n  // Find child elements to animate\n  const attr = 'data-industry';\n  const track = queryElement<HTMLElement>(`[${attr}=\"track\"]`, element);\n  const sticky = queryElement<HTMLElement>(`[${attr}=\"sticky\"]`, element);\n  const assetsCollection = queryElement<HTMLElement>(`[${attr}=\"assets-collection\"]`, element);\n  const assetsList = queryElement<HTMLElement>(`[${attr}=\"assets-list\"]`, element);\n  const assets = queryElements<HTMLElement>(`[${attr}=\"asset\"]`, element);\n  const namesWrap = queryElement<HTMLElement>(`[${attr}=\"names-wrap\"]`, element);\n  const names = queryElements<HTMLElement>(`[${attr}=\"name\"]`, element);\n\n  if (\n    !track ||\n    !sticky ||\n    !assetsCollection ||\n    !assetsList ||\n    assets.length === 0 ||\n    !namesWrap ||\n    names.length === 0\n  ) {\n    debug('warn', 'industriesTimeline', {\n      track,\n      sticky,\n      assetsCollection,\n      assetsList,\n      namesWrap,\n      names,\n    });\n    return;\n  }\n\n  const assetsTl = gsap.timeline({ defaults: { ease: 'none' } });\n  const namesTl = gsap.timeline({ defaults: { ease: context?.ease || 'expo.inOut' } });\n  const masterTl = gsap.timeline();\n\n  namesTl.set(names, { yPercent: 100 * 2 });\n  names.forEach((name, index) => {\n    if (index === 0) return;\n    const position = 200 + -100 * index;\n    namesTl.to(names, { yPercent: position });\n  });\n\n  // Build animation sequence\n  // element.observeContainer(`(width < ${Thresholds.medium})rem`, (match) => {\n  element.observeContainer(`(width < ${Thresholds.medium}em)`, (match) => {\n    if (match) {\n      // get the height of the assets list including padding and margin\n      // const stickyHeight = sticky.getBoundingClientRect().height;\n      const assetWidth = assets[0].getBoundingClientRect().width;\n      const moveListBy = assetWidth * (assets.length - 1);\n\n      // Build the animation sequence\n      const trackHeight = moveListBy;\n      masterTl.set(track, { height: `${trackHeight}px` });\n\n      assetsTl.to(assets, { x: -moveListBy });\n    } else {\n      // get the height of the assets list including padding and margin\n      const stickyHeight = sticky.getBoundingClientRect().height;\n      const assetsCollectionHeight = assetsCollection.getBoundingClientRect().height;\n      const assetsListHeight = assetsList.getBoundingClientRect().height;\n      const moveListBy = assetsListHeight - assetsCollectionHeight;\n\n      // Build the animation sequence\n      const trackHeight = stickyHeight - assetsCollectionHeight + assetsListHeight;\n      masterTl.set(track, { height: `${trackHeight}px` });\n\n      assets.forEach((asset, index) => {\n        const position = (moveListBy / assets.length) * (index + 1) * -1;\n        assetsTl.to(assets, { y: position });\n      });\n    }\n  });\n\n  assetsTl.duration(1);\n  namesTl.duration(1);\n\n  masterTl.add(assetsTl);\n  masterTl.add(namesTl, '<');\n\n  return masterTl;\n};\n\nexport const industriesTriggerConfig: ScrollTriggerConfig = {\n  start: 'top top',\n  end: 'bottom bottom',\n  scrub: 1,\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElements } from '$utils/queryElements';\n\nexport const logosTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({\n    paused: true,\n    defaults: { duration: context?.duration || 1.5, ease: context?.ease || 'expo.inOut' },\n  });\n\n  // Find elements to animate\n  const attr = 'data-logos';\n  const logos = queryElements<HTMLElement>(`[${attr}=\"logo\"]`, element);\n  if (logos.length === 0) return;\n\n  // Main content reveal\n  tl.fromTo(logos, { yPercent: 100 }, { yPercent: 0, stagger: 0.1 });\n\n  return tl;\n};\n\nexport const logosTriggerConfig: ScrollTriggerConfig = {\n  start: 'top 80%',\n  scrub: false,\n  toggleActions: 'play none none none',\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\n/**\n * Modern section animation - entrance animation triggered by scroll\n * Animates content sections with smooth reveals\n */\nexport const modernTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({\n    paused: true,\n    defaults: { duration: context?.duration || 1.5, ease: context?.ease || 'expo.inOut' },\n  });\n\n  // Find elements to animate\n  const eyebrowMarker = queryElement('.eyebrow_marker', element);\n  const eyebrowText = queryElement('.eyebrow_text', element);\n  const contentBlocks = queryElements('.c-heading > *', element);\n\n  // Main content reveal\n  if (eyebrowMarker) {\n    tl.from(eyebrowMarker, { opacity: 0, scale: 0.9, duration: 1.5 });\n  }\n\n  if (eyebrowText) {\n    const splitTitle = new SplitText(eyebrowText, { type: 'lines', mask: 'lines' });\n    tl.from(splitTitle.lines, { opacity: 0, x: '-1rem', duration: 1.5, stagger: 0.1 }, 0.1);\n  }\n\n  if (contentBlocks) {\n    contentBlocks.forEach((block, index) => {\n      const splitTitle = new SplitText(block, { type: 'lines', mask: 'lines' });\n      const position = index === 0 ? 0.1 : '>-1.5';\n\n      tl.from(splitTitle.lines, { yPercent: 100, stagger: 0.15 }, position);\n    });\n  }\n\n  return tl;\n};\n\n/**\n * ScrollTrigger configuration for modern animation\n * Triggers when element is 80% from top of viewport\n */\nexport const modernTriggerConfig: ScrollTriggerConfig = {\n  start: 'top 80%',\n  end: 'bottom top',\n  scrub: false,\n  toggleActions: 'play none none none',\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElements } from '$utils/queryElements';\n\n/**\n * Panels animation - scrubbed animation tied to scroll\n * Creates parallax and reveal effects as user scrolls\n */\nexport const panelsTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  // Check if this is the last panel element within its parent\n  const parent = element.closest('.panels_list');\n  const isLastPanel = (() => {\n    if (!parent) return true;\n\n    // Get all panel siblings after this element\n    const allPanels = queryElements('[data-animation=\"panel\"]', parent);\n    const currentIndex = allPanels.indexOf(element);\n\n    // Check if there are any panel elements after this one\n    return currentIndex === allPanels.length - 1;\n  })();\n\n  if (isLastPanel) return;\n\n  // Build animation sequence\n  const tl = gsap.timeline({ defaults: { ease: context?.ease || 'expo.out' } });\n  tl.to(element, { opacity: 0, scale: 0.8, transformOrigin: 'center bottom', duration: 1 });\n\n  return tl;\n};\n\n/**\n * ScrollTrigger configuration for scrubbed panels animation\n * Scrubs through animation as user scrolls\n */\nexport const panelsTriggerConfig: ScrollTriggerConfig = {\n  start: 'top top',\n  end: 'bottom top',\n  scrub: 1,\n};\n", "import type { ScrollTriggerConfig, TimelineCreator } from '$types';\nimport { queryElement } from '$utils/queryElement';\n\n/**\n * Hero animation - typically plays on page load\n * Animates the main hero section with staggered reveals\n */\nexport const revealTimeline: TimelineCreator = (\n  element: HTMLElement,\n  context?: Record<string, string>\n) => {\n  const tl = gsap.timeline({ defaults: { ease: context?.ease || 'expo.inOut' } });\n\n  // Find child elements to animate\n  const attr = 'data-reveal';\n  const container = element.closest<HTMLElement>(`[${attr}=\"container\"]`);\n  const background = queryElement<HTMLElement>(`[${attr}=\"background\"]`, element);\n  const bottom = queryElement<HTMLElement>(`[${attr}=\"bottom\"]`, element);\n  const top = queryElement<HTMLElement>(`[${attr}=\"top\"]`, element);\n  if (!container || !background || !bottom || !top) return;\n\n  // Build animation sequence\n  container.observeContainer('(width < 48rem)', (match) => {\n    if (match) {\n      gsap.set(top, { minHeight: bottom.getBoundingClientRect().height });\n      tl.fromTo(background, { height: top.getBoundingClientRect().height }, { height: '100%' });\n      tl.from(bottom, { yPercent: -100 }, '<');\n    } else {\n      tl.from(background, { width: '50%' });\n      tl.from(bottom, { xPercent: 50 }, '<');\n      tl.from(top, { xPercent: -50 }, '<');\n    }\n  });\n\n  // Add any context-specific modifications\n  if (context?.speed === 'fast') {\n    tl.timeScale(1.5);\n  } else if (context?.speed === 'slow') {\n    tl.timeScale(0.7);\n  }\n\n  return tl;\n};\n\nconst getStart = (): string => {\n  const firstReveal = queryElement<HTMLElement>('[data-animation=\"reveal\"]');\n  if (!firstReveal) return 'top center';\n\n  const firstRect = firstReveal.getBoundingClientRect();\n  const { top, height } = firstRect;\n\n  const windowHeight = window.innerHeight;\n  const center = windowHeight / 2;\n\n  const belowCenterDistance = center + height;\n  const belowCenterPercentage = belowCenterDistance / windowHeight;\n\n  const startingPositionPercentage = top / windowHeight;\n\n  const percentage =\n    startingPositionPercentage >= 1\n      ? belowCenterPercentage\n      : startingPositionPercentage >= belowCenterPercentage\n        ? startingPositionPercentage\n        : belowCenterPercentage;\n\n  return `top ${percentage * 100}%`;\n};\n\nexport const revealTriggerConfig: ScrollTriggerConfig = {\n  start: getStart(),\n  end: 'bottom center',\n  scrub: 1,\n};\n", "import { aiTeamSlider } from './aiTeamSlider';\nimport { benefits } from './benefits';\nimport { nav } from './nav';\nimport { team } from './team';\nimport { testimonials } from './testimonials';\n\nexport const components = () => {\n  nav();\n  benefits();\n  team();\n  aiTeamSlider();\n  testimonials();\n};\n", "import { queryElement } from '$utils/queryElement';\n\nexport const aiTeamSlider = () => {\n  const attr = 'data-ai-team';\n  const component = queryElement<HTMLElement>(`[${attr}=\"component\"]`);\n  if (!component) return;\n\n  const slider = queryElement<HTMLElement>(`[${attr}=\"slider\"]`, component);\n  const button = queryElement<HTMLButtonElement>(`[${attr}=\"button\"]`, component);\n  if (!slider || !button) return;\n\n  const buttonLink = queryElement<HTMLAnchorElement>('[href]', button);\n  const buttonText = queryElement<HTMLDivElement>('.button_main_text', button);\n  if (!buttonLink || !buttonText) return;\n\n  const originalText = buttonText.textContent;\n\n  // Function to create options based on current threshold\n  const options = {\n    type: 'loop',\n    perPage: 1,\n    gap: 'var(--site--gutter)',\n    autoplay: true,\n    interval: 4000,\n    arrows: false,\n  };\n\n  // Initialize Splide slider\n  const splide = new Splide(slider, options);\n\n  splide.on('ready', () => {\n    updateButton(splide.index);\n  });\n\n  splide.on('moved', (newIndex) => {\n    updateButton(newIndex);\n  });\n\n  splide.mount();\n\n  function updateButton(activeIndex: number) {\n    const activeSlide = splide.Components.Slides.getAt(activeIndex)?.slide;\n    if (!activeSlide) return;\n\n    const name = activeSlide.dataset.aiEmployee;\n    const link = queryElement<HTMLAnchorElement>('[href]', activeSlide);\n    if (!name || !link) return;\n\n    buttonText!.textContent = `${originalText} of ${name}`;\n    buttonLink!.href = link.href;\n  }\n};\n", "import { Thresholds } from 'src/types/thresholds';\n\nimport { containerThreshold } from '$utils/containerThreshold';\nimport { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\n\nexport const benefits = () => {\n  const attr = 'data-benefits';\n\n  const component = queryElement<HTMLElement>(`[${attr}=\"component\"]`);\n  if (!component) return;\n\n  const tagWrap = queryElement<HTMLElement>(`[${attr}=\"tag-wrap\"]`);\n  const list = queryElement<HTMLElement>(`[${attr}=\"list\"]`);\n\n  if (!tagWrap || !list) return;\n\n  const items = queryElements<HTMLElement>(`[${attr}=\"item\"]`, list);\n  const cta = queryElement<HTMLElement>(`[${attr}=\"cta\"]`, list);\n  if (!items || !cta) return;\n\n  type FormatBenefitsProps = {\n    component: HTMLElement;\n    tagWrap: HTMLElement;\n    list: HTMLElement;\n    items: HTMLElement[];\n    cta: HTMLElement;\n  };\n\n  const props: FormatBenefitsProps = { component, tagWrap, list, items, cta };\n\n  resetBenefits(props);\n  formatBenefits(props);\n  window.addEventListener('resize', () => {\n    resetBenefits(props);\n    formatBenefits(props);\n  });\n\n  function resetBenefits({ component, tagWrap, list, items, cta }: FormatBenefitsProps) {\n    component.removeAttribute('style');\n    tagWrap.removeAttribute('style');\n    list.removeAttribute('style');\n    items.forEach((item) => {\n      item.removeAttribute('style');\n    });\n    cta.removeAttribute('style');\n  }\n\n  function formatBenefits({ component, tagWrap, items, cta }: FormatBenefitsProps) {\n    const isAboveThreshold = () => containerThreshold(component, Thresholds.medium, 'above');\n    const grid = tagWrap.closest('.u-grid-above');\n    if (!grid) return;\n\n    const gridComputedStyle = getComputedStyle(grid);\n    const gridGap = parseFloat(gridComputedStyle.getPropertyValue('row-gap'));\n\n    let paddingTop = isAboveThreshold() ? 0 : tagWrap.getBoundingClientRect().height + gridGap;\n\n    items.forEach((item) => {\n      const endHeightOfItem = getDistanceFromParagraphToTop(item);\n      item.style.paddingTop = `${paddingTop}px`;\n\n      paddingTop += endHeightOfItem;\n    });\n\n    cta.style.paddingTop = `${paddingTop}px`;\n\n    const totalHeight = paddingTop + cta.getBoundingClientRect().height; // come back to this???\n    if (isAboveThreshold()) tagWrap.style.height = `${totalHeight}px`;\n\n    const ctaPaddingBottom1 = totalHeight - cta.getBoundingClientRect().height;\n    cta.style.paddingBottom = `${ctaPaddingBottom1}px`;\n    component.style.marginBottom = `${ctaPaddingBottom1 * -1}px`;\n\n    const reversedItems = [...items].reverse();\n    reversedItems.forEach((item) => {\n      const paddingBottom = totalHeight - item.getBoundingClientRect().height;\n      item.style.paddingBottom = `${paddingBottom}px`;\n    });\n\n    items.forEach((item, index) => {\n      if (index === 0) return;\n\n      const computedStyleOfCurrentItem = getComputedStyle(item);\n      const previousItem = items[index - 1];\n      const computedStyleOfPreviousItem = getComputedStyle(previousItem);\n\n      const paddingBottom = parseFloat(computedStyleOfPreviousItem.paddingBottom);\n      const paddingTop = parseFloat(computedStyleOfCurrentItem.paddingTop);\n      const marginTop = paddingBottom + paddingTop;\n\n      item.style.marginTop = `${marginTop * -1}px`;\n    });\n\n    const ctaComputedStyleOfCurrentItem = getComputedStyle(cta);\n    const ctaPreviousItem = items[items.length - 1];\n    const ctaComputedStyleOfPreviousItem = getComputedStyle(ctaPreviousItem);\n\n    const ctaPaddingBottom2 = parseFloat(ctaComputedStyleOfPreviousItem.paddingBottom);\n    const ctaPaddingTop = parseFloat(ctaComputedStyleOfCurrentItem.paddingTop);\n    const ctaMarginTop = ctaPaddingBottom2 + ctaPaddingTop;\n\n    cta.style.marginTop = `${ctaMarginTop * -1}px`;\n  }\n\n  function getDistanceFromParagraphToTop(item: HTMLElement): number {\n    const paragraph = queryElement('.c-paragraph', item);\n    if (!paragraph) return 0;\n\n    const itemRect = item.getBoundingClientRect();\n    const paragraphRect = paragraph.getBoundingClientRect();\n    const distance = paragraphRect?.top - itemRect?.top;\n\n    return distance;\n  }\n};\n", "import { attrs } from '$config/constants';\nimport { queryElement } from '$utils/queryElement';\n\nexport const nav = () => {\n  const nav = queryElement(`[${attrs.elements}=\"nav\"]`);\n  const inner = queryElement(`[${attrs.elements}=\"inner\"]`);\n  const main = queryElement('.page_main');\n  const scrollElement = inner || main;\n  if (!nav || !scrollElement) return;\n\n  const variant = 'w-variant-144a276f-7272-627f-9552-6194bfeced8d';\n\n  const velocityThreshold = 1000;\n\n  const timeline = gsap.timeline({ paused: true });\n\n  timeline.to(nav, { y: '-100%', duration: 1, ease: 'expo.inOut' });\n\n  ScrollTrigger.create({\n    trigger: scrollElement,\n    start: 'top top',\n    end: 'bottom bottom',\n    scrub: false,\n    onEnter: () => {\n      if (inner) nav.classList.add(variant);\n    },\n    onLeaveBack: () => {\n      if (inner) nav.classList.remove(variant);\n    },\n    onUpdate: (self) => {\n      const { direction } = self;\n      const velocity = self.getVelocity();\n\n      if (direction === 1 && velocity >= velocityThreshold) {\n        timeline.play();\n      } else if (direction === -1) {\n        timeline.reverse();\n      }\n    },\n  });\n};\n", "import { queryElement } from '$utils/queryElement';\nimport { queryElements } from '$utils/queryElements';\nimport { scrollControl } from '$utils/scrollControl';\n\nexport const team = (): void => {\n  const navs = document.querySelectorAll<HTMLElement>('.nav_component');\n\n  const attrKey = 'data-team';\n  const attrKeyImage = 'data-team-image';\n  const attrValues = {\n    card: 'card',\n    popup: 'popup',\n    popupTrigger: 'popup-trigger',\n    popupClose: 'popup-close',\n    imageStart: 'start',\n    imageEnd: 'end',\n  };\n\n  const popups = queryElements<HTMLElement>(`[${attrKey}=${attrValues.popup}]`);\n  const cards = queryElements<HTMLElement>(`[${attrKey}=${attrValues.card}]`);\n\n  cards.forEach((card, index) => {\n    const popup = popups[index];\n    const popupClose = queryElement<HTMLElement>('button', popup);\n    const popupTriggers = queryElements<HTMLElement>(\n      `[${attrKey}=${attrValues.popupTrigger}]`,\n      card\n    );\n\n    const startContainer = queryElement<HTMLElement>(\n      `[${attrKeyImage}=${attrValues.imageStart}]`,\n      card\n    );\n    const endContainer = queryElement<HTMLElement>(\n      `[${attrKeyImage}=${attrValues.imageEnd}]`,\n      popup\n    );\n\n    // Get the actual image element from the start container\n    const image = queryElement<HTMLImageElement>('img', startContainer);\n\n    if (\n      !popup ||\n      !popupTriggers.length ||\n      !popupClose ||\n      !startContainer ||\n      !endContainer ||\n      !image\n    ) {\n      return;\n    }\n\n    let isAnimating = false;\n\n    popupTriggers.forEach((trigger) => {\n      trigger.addEventListener('click', () => {\n        if (isAnimating) return;\n        isAnimating = true;\n\n        try {\n          // Get the bounds of the image in its current position\n          const startBounds = image.getBoundingClientRect();\n\n          // Prevent smooth scrolling\n          scrollControl.disable();\n\n          // Show popup with opacity 0 to calculate end position\n          popup.style.display = 'flex';\n          popup.style.opacity = '0';\n\n          // Get the bounds of where the image should end up\n          const endBounds = endContainer.getBoundingClientRect();\n\n          // Create a clone of the image for animation\n          const clone = image.cloneNode(true) as HTMLImageElement;\n\n          // Reset clone styles and position at start position\n          clone.style.cssText = '';\n          clone.style.position = 'fixed';\n          clone.style.left = startBounds.left + 'px';\n          clone.style.top = startBounds.top + 'px';\n          clone.style.width = startBounds.width + 'px';\n          clone.style.height = startBounds.height + 'px';\n          clone.style.zIndex = '9999';\n          clone.style.margin = '0';\n          clone.style.padding = '0';\n          clone.style.transform = 'none';\n          clone.style.objectFit = 'cover';\n          document.body.appendChild(clone);\n\n          // Hide original image\n          image.style.opacity = '0';\n\n          // Move the actual image to the end container and set it to fill\n          endContainer.appendChild(image);\n          image.style.opacity = '1';\n          image.style.visibility = 'hidden';\n          image.style.width = '100%';\n          image.style.height = '100%';\n          image.style.objectFit = 'cover';\n\n          // Create timeline for coordinated animations\n          const tl = gsap.timeline();\n\n          // Animate popup opacity from 0 to 1\n          tl.to(\n            popup,\n            {\n              opacity: 1,\n              duration: 0.8,\n              ease: 'power2.inOut',\n            },\n            0\n          );\n\n          // Animate nav opacity from 1 to 0\n          if (navs) {\n            tl.to(\n              navs,\n              {\n                opacity: 0,\n                duration: 0.8,\n                ease: 'power2.inOut',\n                onComplete: () => {\n                  navs.forEach((nav) => {\n                    nav.style.display = 'none';\n                  });\n                },\n              },\n              0\n            );\n          }\n\n          // Animate clone to end position\n          tl.fromTo(\n            clone,\n            {\n              // Starting position (grid position)\n              left: startBounds.left,\n              top: startBounds.top,\n              width: startBounds.width,\n              height: startBounds.height,\n            },\n            {\n              // Ending position (popup position)\n              duration: 0.8,\n              left: endBounds.left,\n              top: endBounds.top,\n              width: endBounds.width,\n              height: endBounds.height,\n              ease: 'power2.inOut',\n              onComplete: () => {\n                // Remove clone and show actual image\n                clone.remove();\n                image.style.visibility = 'visible';\n                isAnimating = false;\n              },\n            },\n            0 // Start at the same time as popup fade\n          );\n        } catch (error) {\n          console.error('Error during opening animation:', error);\n          isAnimating = false;\n          popup.style.display = 'flex';\n          popup.style.opacity = '1';\n          // Ensure smooth scrolling is stopped even on error\n          scrollControl.disable();\n        }\n      });\n    });\n\n    popupClose.addEventListener('click', () => {\n      if (isAnimating) return;\n      isAnimating = true;\n\n      try {\n        // The image should now be in the endContainer\n        const currentImage = queryElement<HTMLImageElement>('img', endContainer);\n        if (!currentImage) {\n          popup.style.display = 'none';\n          isAnimating = false;\n          return;\n        }\n\n        // Get bounds BEFORE hiding anything\n        const endBounds = currentImage.getBoundingClientRect();\n        const startBounds = startContainer.getBoundingClientRect();\n\n        // Create clone for animation\n        const clone = currentImage.cloneNode(true) as HTMLImageElement;\n        clone.style.cssText = '';\n        clone.style.position = 'fixed';\n        clone.style.zIndex = '9999';\n        clone.style.pointerEvents = 'none';\n        clone.style.margin = '0';\n        clone.style.padding = '0';\n        clone.style.transform = 'none';\n        clone.style.objectFit = 'cover';\n        document.body.appendChild(clone);\n\n        // Hide image but keep popup visible for fade animation\n        currentImage.style.visibility = 'hidden';\n\n        // Move the actual image back to start container and reset size\n        startContainer.appendChild(currentImage);\n        currentImage.style.width = '';\n        currentImage.style.height = '';\n        currentImage.style.objectFit = '';\n\n        // Create timeline for coordinated animations\n        const tl = gsap.timeline({\n          onComplete: () => {\n            clone.remove();\n            currentImage.style.visibility = 'visible';\n            currentImage.style.opacity = '1';\n            popup.style.display = 'none';\n            // Re-enable smooth scrolling after animation completes\n            scrollControl.enable();\n            isAnimating = false;\n          },\n        });\n\n        // Animate popup opacity from 1 to 0\n        tl.to(\n          popup,\n          {\n            opacity: 0,\n            duration: 0.8,\n            ease: 'power2.inOut',\n          },\n          0\n        );\n\n        // Animate nav opacity from 0 to 1\n        if (navs) {\n          tl.to(\n            navs,\n            {\n              onStart: () => {\n                navs.forEach((nav) => {\n                  nav.style.removeProperty('display');\n                });\n              },\n              opacity: 1,\n              duration: 0.8,\n              ease: 'power2.inOut',\n            },\n            0\n          );\n        }\n\n        // Animate clone back to start position\n        tl.fromTo(\n          clone,\n          {\n            // Starting position (popup position)\n            left: endBounds.left,\n            top: endBounds.top,\n            width: endBounds.width,\n            height: endBounds.height,\n          },\n          {\n            // Ending position (grid position)\n            duration: 0.8,\n            left: startBounds.left,\n            top: startBounds.top,\n            width: startBounds.width,\n            height: startBounds.height,\n            ease: 'power2.inOut',\n          },\n          0 // Start at the same time as popup fade\n        );\n      } catch (error) {\n        console.error('Error during closing animation:', error);\n        popup.style.display = 'none';\n        if (image) {\n          image.style.opacity = '1';\n          image.style.visibility = 'visible';\n        }\n        // Re-enable smooth scrolling on error\n        scrollControl.enable();\n        isAnimating = false;\n      }\n    });\n  });\n};\n", "import { App } from '$app';\n\n/**\n * Utility functions for controlling Lenis smooth scroll state\n */\nexport const scrollControl = {\n  /**\n   * Disable smooth scrolling (equivalent to body overflow hidden)\n   */\n  disable(): void {\n    const app = App.getInstance();\n    app.lenis.stop();\n  },\n\n  /**\n   * Enable smooth scrolling (equivalent to removing body overflow hidden)\n   */\n  enable(): void {\n    const app = App.getInstance();\n    app.lenis.start();\n  },\n\n  /**\n   * Check if smooth scrolling is currently disabled\n   */\n  isDisabled(): boolean {\n    const app = App.getInstance();\n    return app.lenis.isStopped;\n  },\n\n  /**\n   * Toggle smooth scrolling state\n   */\n  toggle(): void {\n    const app = App.getInstance();\n    if (app.lenis.isStopped) {\n      app.lenis.start();\n    } else {\n      app.lenis.stop();\n    }\n  },\n\n  /**\n   * Scroll to a specific position with optional smooth animation\n   */\n  scrollTo(target: number | string, options?: { immediate?: boolean; offset?: number }): void {\n    const app = App.getInstance();\n    app.lenis.scrollTo(target, options);\n  },\n\n  /**\n   * Get current scroll position\n   */\n  getScroll(): number {\n    const app = App.getInstance();\n    return app.lenis.scroll;\n  },\n};\n", "import { Thresholds } from 'src/types/thresholds';\n\nimport { containerThreshold } from '$utils/containerThreshold';\nimport { queryElement } from '$utils/queryElement';\n\ntype Threshold = 'small' | 'medium' | 'large';\nexport const testimonials = () => {\n  const attr = 'data-testimonials';\n  const component = queryElement<HTMLElement>(`.splide[${attr}=\"component\"]`);\n  if (!component) return;\n\n  const getThreshold = (): Threshold => {\n    const isBelowLarge = containerThreshold(component, Thresholds.large, 'below');\n    const isBelowMedium = containerThreshold(component, Thresholds.medium, 'below');\n    return isBelowMedium ? 'small' : isBelowLarge ? 'medium' : 'large';\n  };\n\n  let threshold = getThreshold();\n  handleOverlay(threshold);\n\n  const createOptions = (threshold: Threshold) => {\n    return {\n      type: 'loop',\n      perPage: threshold === 'small' ? 1 : threshold === 'medium' ? 2 : 3,\n      gap: 'var(--site--gutter)',\n      autoplay: true,\n      interval: 4000,\n      pagination: false,\n      arrows: false,\n    };\n  };\n\n  let splide = new Splide(component, createOptions(threshold));\n  splide.mount();\n\n  window.addEventListener('resize', () => {\n    const newThreshold = getThreshold();\n    if (newThreshold !== threshold) {\n      threshold = newThreshold;\n      splide.destroy(true);\n      splide = new Splide(component, createOptions(threshold));\n      splide.mount();\n      handleOverlay(threshold);\n    }\n  });\n\n  function handleOverlay(threshold: Threshold) {\n    const overlay = queryElement<HTMLElement>(`[${attr}=\"overlay\"]`);\n    if (!overlay) return;\n\n    if (threshold === 'large') overlay.style.removeProperty('display');\n    else overlay.style.display = 'none';\n  }\n};\n"],
  "mappings": "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",
  "names": ["EventBus", "lerp", "EventBus", "nav", "timeline", "trigger", "component", "tagWrap", "list", "items", "cta", "paddingTop", "nav", "nav", "threshold"]
}
